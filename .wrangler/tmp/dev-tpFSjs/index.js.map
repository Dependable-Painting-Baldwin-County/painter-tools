{
  "version": 3,
  "sources": ["../../../../../Library/pnpm/global/5/.pnpm/unenv@2.0.0-rc.21/node_modules/unenv/dist/runtime/_internal/utils.mjs", "../../../../../Library/pnpm/global/5/.pnpm/unenv@2.0.0-rc.21/node_modules/unenv/dist/runtime/node/internal/perf_hooks/performance.mjs", "../../../../../Library/pnpm/global/5/.pnpm/@cloudflare+unenv-preset@2.7.4_unenv@2.0.0-rc.21_workerd@1.20250924.0/node_modules/@cloudflare/unenv-preset/dist/runtime/polyfill/performance.mjs", "../../../../../Library/pnpm/global/5/.pnpm/unenv@2.0.0-rc.21/node_modules/unenv/dist/runtime/node/console.mjs", "../../../../../Library/pnpm/global/5/.pnpm/unenv@2.0.0-rc.21/node_modules/unenv/dist/runtime/mock/noop.mjs", "../../../../../Library/pnpm/global/5/.pnpm/@cloudflare+unenv-preset@2.7.4_unenv@2.0.0-rc.21_workerd@1.20250924.0/node_modules/@cloudflare/unenv-preset/dist/runtime/node/console.mjs", "../../../../../Library/pnpm/global/5/.pnpm/wrangler@4.40.1/node_modules/wrangler/_virtual_unenv_global_polyfill-@cloudflare-unenv-preset-node-console", "../../../../../Library/pnpm/global/5/.pnpm/unenv@2.0.0-rc.21/node_modules/unenv/dist/runtime/node/internal/process/hrtime.mjs", "../../../../../Library/pnpm/global/5/.pnpm/unenv@2.0.0-rc.21/node_modules/unenv/dist/runtime/node/internal/process/process.mjs", "../../../../../Library/pnpm/global/5/.pnpm/unenv@2.0.0-rc.21/node_modules/unenv/dist/runtime/node/internal/tty/read-stream.mjs", "../../../../../Library/pnpm/global/5/.pnpm/unenv@2.0.0-rc.21/node_modules/unenv/dist/runtime/node/internal/tty/write-stream.mjs", "../../../../../Library/pnpm/global/5/.pnpm/unenv@2.0.0-rc.21/node_modules/unenv/dist/runtime/node/internal/process/node-version.mjs", "../../../../../Library/pnpm/global/5/.pnpm/@cloudflare+unenv-preset@2.7.4_unenv@2.0.0-rc.21_workerd@1.20250924.0/node_modules/@cloudflare/unenv-preset/dist/runtime/node/process.mjs", "../../../../../Library/pnpm/global/5/.pnpm/wrangler@4.40.1/node_modules/wrangler/_virtual_unenv_global_polyfill-@cloudflare-unenv-preset-node-process", "../../../api/chat.ts", "../../../api/track.ts", "../../../api/estimate.ts", "../../../src/index.ts", "../../../../../Library/pnpm/global/5/.pnpm/wrangler@4.40.1/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../../../Library/pnpm/global/5/.pnpm/wrangler@4.40.1/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-9y7NPi/middleware-insertion-facade.js", "../../../../../Library/pnpm/global/5/.pnpm/wrangler@4.40.1/node_modules/wrangler/templates/middleware/common.ts", "../bundle-9y7NPi/middleware-loader.entry.ts"],
  "sourceRoot": "/Users/alexdimmler/Website/painter-tools/.wrangler/tmp/dev-tpFSjs",
  "sourcesContent": ["/* @__NO_SIDE_EFFECTS__ */\nexport function rawHeaders(headers) {\n\tconst rawHeaders = [];\n\tfor (const key in headers) {\n\t\tif (Array.isArray(headers[key])) {\n\t\t\tfor (const h of headers[key]) {\n\t\t\t\trawHeaders.push(key, h);\n\t\t\t}\n\t\t} else {\n\t\t\trawHeaders.push(key, headers[key]);\n\t\t}\n\t}\n\treturn rawHeaders;\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function mergeFns(...functions) {\n\treturn function(...args) {\n\t\tfor (const fn of functions) {\n\t\t\tfn(...args);\n\t\t}\n\t};\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function createNotImplementedError(name) {\n\treturn new Error(`[unenv] ${name} is not implemented yet!`);\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function notImplemented(name) {\n\tconst fn = () => {\n\t\tthrow createNotImplementedError(name);\n\t};\n\treturn Object.assign(fn, { __unenv__: true });\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function notImplementedAsync(name) {\n\tconst fn = notImplemented(name);\n\tfn.__promisify__ = () => notImplemented(name + \".__promisify__\");\n\tfn.native = fn;\n\treturn fn;\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function notImplementedClass(name) {\n\treturn class {\n\t\t__unenv__ = true;\n\t\tconstructor() {\n\t\t\tthrow new Error(`[unenv] ${name} is not implemented yet!`);\n\t\t}\n\t};\n}\n", "import { createNotImplementedError } from \"../../../_internal/utils.mjs\";\nconst _timeOrigin = globalThis.performance?.timeOrigin ?? Date.now();\nconst _performanceNow = globalThis.performance?.now ? globalThis.performance.now.bind(globalThis.performance) : () => Date.now() - _timeOrigin;\nconst nodeTiming = {\n\tname: \"node\",\n\tentryType: \"node\",\n\tstartTime: 0,\n\tduration: 0,\n\tnodeStart: 0,\n\tv8Start: 0,\n\tbootstrapComplete: 0,\n\tenvironment: 0,\n\tloopStart: 0,\n\tloopExit: 0,\n\tidleTime: 0,\n\tuvMetricsInfo: {\n\t\tloopCount: 0,\n\t\tevents: 0,\n\t\teventsWaiting: 0\n\t},\n\tdetail: undefined,\n\ttoJSON() {\n\t\treturn this;\n\t}\n};\n// PerformanceEntry\nexport class PerformanceEntry {\n\t__unenv__ = true;\n\tdetail;\n\tentryType = \"event\";\n\tname;\n\tstartTime;\n\tconstructor(name, options) {\n\t\tthis.name = name;\n\t\tthis.startTime = options?.startTime || _performanceNow();\n\t\tthis.detail = options?.detail;\n\t}\n\tget duration() {\n\t\treturn _performanceNow() - this.startTime;\n\t}\n\ttoJSON() {\n\t\treturn {\n\t\t\tname: this.name,\n\t\t\tentryType: this.entryType,\n\t\t\tstartTime: this.startTime,\n\t\t\tduration: this.duration,\n\t\t\tdetail: this.detail\n\t\t};\n\t}\n}\n// PerformanceMark\nexport const PerformanceMark = class PerformanceMark extends PerformanceEntry {\n\tentryType = \"mark\";\n\tconstructor() {\n\t\t// @ts-ignore\n\t\tsuper(...arguments);\n\t}\n\tget duration() {\n\t\treturn 0;\n\t}\n};\n// PerformanceMark\nexport class PerformanceMeasure extends PerformanceEntry {\n\tentryType = \"measure\";\n}\n// PerformanceResourceTiming\nexport class PerformanceResourceTiming extends PerformanceEntry {\n\tentryType = \"resource\";\n\tserverTiming = [];\n\tconnectEnd = 0;\n\tconnectStart = 0;\n\tdecodedBodySize = 0;\n\tdomainLookupEnd = 0;\n\tdomainLookupStart = 0;\n\tencodedBodySize = 0;\n\tfetchStart = 0;\n\tinitiatorType = \"\";\n\tname = \"\";\n\tnextHopProtocol = \"\";\n\tredirectEnd = 0;\n\tredirectStart = 0;\n\trequestStart = 0;\n\tresponseEnd = 0;\n\tresponseStart = 0;\n\tsecureConnectionStart = 0;\n\tstartTime = 0;\n\ttransferSize = 0;\n\tworkerStart = 0;\n\tresponseStatus = 0;\n}\n// PerformanceObserverEntryList\nexport class PerformanceObserverEntryList {\n\t__unenv__ = true;\n\tgetEntries() {\n\t\treturn [];\n\t}\n\tgetEntriesByName(_name, _type) {\n\t\treturn [];\n\t}\n\tgetEntriesByType(type) {\n\t\treturn [];\n\t}\n}\n// Performance\nexport class Performance {\n\t__unenv__ = true;\n\ttimeOrigin = _timeOrigin;\n\teventCounts = new Map();\n\t_entries = [];\n\t_resourceTimingBufferSize = 0;\n\tnavigation = undefined;\n\ttiming = undefined;\n\ttimerify(_fn, _options) {\n\t\tthrow createNotImplementedError(\"Performance.timerify\");\n\t}\n\tget nodeTiming() {\n\t\treturn nodeTiming;\n\t}\n\teventLoopUtilization() {\n\t\treturn {};\n\t}\n\tmarkResourceTiming() {\n\t\t// TODO: create a new PerformanceResourceTiming entry\n\t\t// so that performance.getEntries, getEntriesByName, and getEntriesByType return it\n\t\t// see: https://nodejs.org/api/perf_hooks.html#performancemarkresourcetimingtiminginfo-requestedurl-initiatortype-global-cachemode-bodyinfo-responsestatus-deliverytype\n\t\treturn new PerformanceResourceTiming(\"\");\n\t}\n\tonresourcetimingbufferfull = null;\n\tnow() {\n\t\t// https://developer.mozilla.org/en-US/docs/Web/API/Performance/now\n\t\tif (this.timeOrigin === _timeOrigin) {\n\t\t\treturn _performanceNow();\n\t\t}\n\t\treturn Date.now() - this.timeOrigin;\n\t}\n\tclearMarks(markName) {\n\t\tthis._entries = markName ? this._entries.filter((e) => e.name !== markName) : this._entries.filter((e) => e.entryType !== \"mark\");\n\t}\n\tclearMeasures(measureName) {\n\t\tthis._entries = measureName ? this._entries.filter((e) => e.name !== measureName) : this._entries.filter((e) => e.entryType !== \"measure\");\n\t}\n\tclearResourceTimings() {\n\t\tthis._entries = this._entries.filter((e) => e.entryType !== \"resource\" || e.entryType !== \"navigation\");\n\t}\n\tgetEntries() {\n\t\treturn this._entries;\n\t}\n\tgetEntriesByName(name, type) {\n\t\treturn this._entries.filter((e) => e.name === name && (!type || e.entryType === type));\n\t}\n\tgetEntriesByType(type) {\n\t\treturn this._entries.filter((e) => e.entryType === type);\n\t}\n\tmark(name, options) {\n\t\t// @ts-expect-error constructor is not protected\n\t\tconst entry = new PerformanceMark(name, options);\n\t\tthis._entries.push(entry);\n\t\treturn entry;\n\t}\n\tmeasure(measureName, startOrMeasureOptions, endMark) {\n\t\tlet start;\n\t\tlet end;\n\t\tif (typeof startOrMeasureOptions === \"string\") {\n\t\t\tstart = this.getEntriesByName(startOrMeasureOptions, \"mark\")[0]?.startTime;\n\t\t\tend = this.getEntriesByName(endMark, \"mark\")[0]?.startTime;\n\t\t} else {\n\t\t\tstart = Number.parseFloat(startOrMeasureOptions?.start) || this.now();\n\t\t\tend = Number.parseFloat(startOrMeasureOptions?.end) || this.now();\n\t\t}\n\t\tconst entry = new PerformanceMeasure(measureName, {\n\t\t\tstartTime: start,\n\t\t\tdetail: {\n\t\t\t\tstart,\n\t\t\t\tend\n\t\t\t}\n\t\t});\n\t\tthis._entries.push(entry);\n\t\treturn entry;\n\t}\n\tsetResourceTimingBufferSize(maxSize) {\n\t\tthis._resourceTimingBufferSize = maxSize;\n\t}\n\taddEventListener(type, listener, options) {\n\t\tthrow createNotImplementedError(\"Performance.addEventListener\");\n\t}\n\tremoveEventListener(type, listener, options) {\n\t\tthrow createNotImplementedError(\"Performance.removeEventListener\");\n\t}\n\tdispatchEvent(event) {\n\t\tthrow createNotImplementedError(\"Performance.dispatchEvent\");\n\t}\n\ttoJSON() {\n\t\treturn this;\n\t}\n}\n// PerformanceObserver\nexport class PerformanceObserver {\n\t__unenv__ = true;\n\tstatic supportedEntryTypes = [];\n\t_callback = null;\n\tconstructor(callback) {\n\t\tthis._callback = callback;\n\t}\n\ttakeRecords() {\n\t\treturn [];\n\t}\n\tdisconnect() {\n\t\tthrow createNotImplementedError(\"PerformanceObserver.disconnect\");\n\t}\n\tobserve(options) {\n\t\tthrow createNotImplementedError(\"PerformanceObserver.observe\");\n\t}\n\tbind(fn) {\n\t\treturn fn;\n\t}\n\trunInAsyncScope(fn, thisArg, ...args) {\n\t\treturn fn.call(thisArg, ...args);\n\t}\n\tasyncId() {\n\t\treturn 0;\n\t}\n\ttriggerAsyncId() {\n\t\treturn 0;\n\t}\n\temitDestroy() {\n\t\treturn this;\n\t}\n}\n// workerd implements a subset of globalThis.performance (as of last check, only timeOrigin set to 0 + now() implemented)\n// We already use performance.now() from globalThis.performance, if provided (see top of this file)\n// If we detect this condition, we can just use polyfill instead.\nexport const performance = globalThis.performance && \"addEventListener\" in globalThis.performance ? globalThis.performance : new Performance();\n", "import {\n  performance,\n  Performance,\n  PerformanceEntry,\n  PerformanceMark,\n  PerformanceMeasure,\n  PerformanceObserver,\n  PerformanceObserverEntryList,\n  PerformanceResourceTiming\n} from \"node:perf_hooks\";\nglobalThis.performance = performance;\nglobalThis.Performance = Performance;\nglobalThis.PerformanceEntry = PerformanceEntry;\nglobalThis.PerformanceMark = PerformanceMark;\nglobalThis.PerformanceMeasure = PerformanceMeasure;\nglobalThis.PerformanceObserver = PerformanceObserver;\nglobalThis.PerformanceObserverEntryList = PerformanceObserverEntryList;\nglobalThis.PerformanceResourceTiming = PerformanceResourceTiming;\n", "import { Writable } from \"node:stream\";\nimport noop from \"../mock/noop.mjs\";\nimport { notImplemented, notImplementedClass } from \"../_internal/utils.mjs\";\nconst _console = globalThis.console;\n// undocumented public APIs\nexport const _ignoreErrors = true;\nexport const _stderr = new Writable();\nexport const _stdout = new Writable();\nexport const log = _console?.log ?? noop;\nexport const info = _console?.info ?? log;\nexport const trace = _console?.trace ?? info;\nexport const debug = _console?.debug ?? log;\nexport const table = _console?.table ?? log;\nexport const error = _console?.error ?? log;\nexport const warn = _console?.warn ?? error;\n// https://developer.chrome.com/docs/devtools/console/api#createtask\nexport const createTask = _console?.createTask ?? /* @__PURE__ */ notImplemented(\"console.createTask\");\nexport const assert = /* @__PURE__ */ notImplemented(\"console.assert\");\n// noop\nexport const clear = _console?.clear ?? noop;\nexport const count = _console?.count ?? noop;\nexport const countReset = _console?.countReset ?? noop;\nexport const dir = _console?.dir ?? noop;\nexport const dirxml = _console?.dirxml ?? noop;\nexport const group = _console?.group ?? noop;\nexport const groupEnd = _console?.groupEnd ?? noop;\nexport const groupCollapsed = _console?.groupCollapsed ?? noop;\nexport const profile = _console?.profile ?? noop;\nexport const profileEnd = _console?.profileEnd ?? noop;\nexport const time = _console?.time ?? noop;\nexport const timeEnd = _console?.timeEnd ?? noop;\nexport const timeLog = _console?.timeLog ?? noop;\nexport const timeStamp = _console?.timeStamp ?? noop;\nexport const Console = _console?.Console ?? /* @__PURE__ */ notImplementedClass(\"console.Console\");\nexport const _times = /* @__PURE__ */ new Map();\nexport function context() {\n\t// TODO: Should be Console with all the methods\n\treturn _console;\n}\nexport const _stdoutErrorHandler = noop;\nexport const _stderrErrorHandler = noop;\nexport default {\n\t_times,\n\t_ignoreErrors,\n\t_stdoutErrorHandler,\n\t_stderrErrorHandler,\n\t_stdout,\n\t_stderr,\n\tassert,\n\tclear,\n\tConsole,\n\tcount,\n\tcountReset,\n\tdebug,\n\tdir,\n\tdirxml,\n\terror,\n\tcontext,\n\tcreateTask,\n\tgroup,\n\tgroupEnd,\n\tgroupCollapsed,\n\tinfo,\n\tlog,\n\tprofile,\n\tprofileEnd,\n\ttable,\n\ttime,\n\ttimeEnd,\n\ttimeLog,\n\ttimeStamp,\n\ttrace,\n\twarn\n};\n", "export default Object.assign(() => {}, { __unenv__: true });\n", "import {\n  _ignoreErrors,\n  _stderr,\n  _stderrErrorHandler,\n  _stdout,\n  _stdoutErrorHandler,\n  _times,\n  Console\n} from \"unenv/node/console\";\nexport {\n  Console,\n  _ignoreErrors,\n  _stderr,\n  _stderrErrorHandler,\n  _stdout,\n  _stdoutErrorHandler,\n  _times\n} from \"unenv/node/console\";\nconst workerdConsole = globalThis[\"console\"];\nexport const {\n  assert,\n  clear,\n  // @ts-expect-error undocumented public API\n  context,\n  count,\n  countReset,\n  // @ts-expect-error undocumented public API\n  createTask,\n  debug,\n  dir,\n  dirxml,\n  error,\n  group,\n  groupCollapsed,\n  groupEnd,\n  info,\n  log,\n  profile,\n  profileEnd,\n  table,\n  time,\n  timeEnd,\n  timeLog,\n  timeStamp,\n  trace,\n  warn\n} = workerdConsole;\nObject.assign(workerdConsole, {\n  Console,\n  _ignoreErrors,\n  _stderr,\n  _stderrErrorHandler,\n  _stdout,\n  _stdoutErrorHandler,\n  _times\n});\nexport default workerdConsole;\n", "import { default as defaultExport } from \"@cloudflare/unenv-preset/node/console\";\nglobalThis.console = defaultExport;", "// https://nodejs.org/api/process.html#processhrtime\nexport const hrtime = /* @__PURE__ */ Object.assign(function hrtime(startTime) {\n\tconst now = Date.now();\n\t// millis to seconds\n\tconst seconds = Math.trunc(now / 1e3);\n\t// convert millis to nanos\n\tconst nanos = now % 1e3 * 1e6;\n\tif (startTime) {\n\t\tlet diffSeconds = seconds - startTime[0];\n\t\tlet diffNanos = nanos - startTime[0];\n\t\tif (diffNanos < 0) {\n\t\t\tdiffSeconds = diffSeconds - 1;\n\t\t\tdiffNanos = 1e9 + diffNanos;\n\t\t}\n\t\treturn [diffSeconds, diffNanos];\n\t}\n\treturn [seconds, nanos];\n}, { bigint: function bigint() {\n\t// Convert milliseconds to nanoseconds\n\treturn BigInt(Date.now() * 1e6);\n} });\n", "import { EventEmitter } from \"node:events\";\nimport { ReadStream, WriteStream } from \"node:tty\";\nimport { notImplemented, createNotImplementedError } from \"../../../_internal/utils.mjs\";\n// node-version.ts is generated at build time\nimport { NODE_VERSION } from \"./node-version.mjs\";\nexport class Process extends EventEmitter {\n\tenv;\n\thrtime;\n\tnextTick;\n\tconstructor(impl) {\n\t\tsuper();\n\t\tthis.env = impl.env;\n\t\tthis.hrtime = impl.hrtime;\n\t\tthis.nextTick = impl.nextTick;\n\t\tfor (const prop of [...Object.getOwnPropertyNames(Process.prototype), ...Object.getOwnPropertyNames(EventEmitter.prototype)]) {\n\t\t\tconst value = this[prop];\n\t\t\tif (typeof value === \"function\") {\n\t\t\t\tthis[prop] = value.bind(this);\n\t\t\t}\n\t\t}\n\t}\n\t// --- event emitter ---\n\temitWarning(warning, type, code) {\n\t\tconsole.warn(`${code ? `[${code}] ` : \"\"}${type ? `${type}: ` : \"\"}${warning}`);\n\t}\n\temit(...args) {\n\t\t// @ts-ignore\n\t\treturn super.emit(...args);\n\t}\n\tlisteners(eventName) {\n\t\treturn super.listeners(eventName);\n\t}\n\t// --- stdio (lazy initializers) ---\n\t#stdin;\n\t#stdout;\n\t#stderr;\n\tget stdin() {\n\t\treturn this.#stdin ??= new ReadStream(0);\n\t}\n\tget stdout() {\n\t\treturn this.#stdout ??= new WriteStream(1);\n\t}\n\tget stderr() {\n\t\treturn this.#stderr ??= new WriteStream(2);\n\t}\n\t// --- cwd ---\n\t#cwd = \"/\";\n\tchdir(cwd) {\n\t\tthis.#cwd = cwd;\n\t}\n\tcwd() {\n\t\treturn this.#cwd;\n\t}\n\t// --- dummy props and getters ---\n\tarch = \"\";\n\tplatform = \"\";\n\targv = [];\n\targv0 = \"\";\n\texecArgv = [];\n\texecPath = \"\";\n\ttitle = \"\";\n\tpid = 200;\n\tppid = 100;\n\tget version() {\n\t\treturn `v${NODE_VERSION}`;\n\t}\n\tget versions() {\n\t\treturn { node: NODE_VERSION };\n\t}\n\tget allowedNodeEnvironmentFlags() {\n\t\treturn new Set();\n\t}\n\tget sourceMapsEnabled() {\n\t\treturn false;\n\t}\n\tget debugPort() {\n\t\treturn 0;\n\t}\n\tget throwDeprecation() {\n\t\treturn false;\n\t}\n\tget traceDeprecation() {\n\t\treturn false;\n\t}\n\tget features() {\n\t\treturn {};\n\t}\n\tget release() {\n\t\treturn {};\n\t}\n\tget connected() {\n\t\treturn false;\n\t}\n\tget config() {\n\t\treturn {};\n\t}\n\tget moduleLoadList() {\n\t\treturn [];\n\t}\n\tconstrainedMemory() {\n\t\treturn 0;\n\t}\n\tavailableMemory() {\n\t\treturn 0;\n\t}\n\tuptime() {\n\t\treturn 0;\n\t}\n\tresourceUsage() {\n\t\treturn {};\n\t}\n\t// --- noop methods ---\n\tref() {\n\t\t// noop\n\t}\n\tunref() {\n\t\t// noop\n\t}\n\t// --- unimplemented methods ---\n\tumask() {\n\t\tthrow createNotImplementedError(\"process.umask\");\n\t}\n\tgetBuiltinModule() {\n\t\treturn undefined;\n\t}\n\tgetActiveResourcesInfo() {\n\t\tthrow createNotImplementedError(\"process.getActiveResourcesInfo\");\n\t}\n\texit() {\n\t\tthrow createNotImplementedError(\"process.exit\");\n\t}\n\treallyExit() {\n\t\tthrow createNotImplementedError(\"process.reallyExit\");\n\t}\n\tkill() {\n\t\tthrow createNotImplementedError(\"process.kill\");\n\t}\n\tabort() {\n\t\tthrow createNotImplementedError(\"process.abort\");\n\t}\n\tdlopen() {\n\t\tthrow createNotImplementedError(\"process.dlopen\");\n\t}\n\tsetSourceMapsEnabled() {\n\t\tthrow createNotImplementedError(\"process.setSourceMapsEnabled\");\n\t}\n\tloadEnvFile() {\n\t\tthrow createNotImplementedError(\"process.loadEnvFile\");\n\t}\n\tdisconnect() {\n\t\tthrow createNotImplementedError(\"process.disconnect\");\n\t}\n\tcpuUsage() {\n\t\tthrow createNotImplementedError(\"process.cpuUsage\");\n\t}\n\tsetUncaughtExceptionCaptureCallback() {\n\t\tthrow createNotImplementedError(\"process.setUncaughtExceptionCaptureCallback\");\n\t}\n\thasUncaughtExceptionCaptureCallback() {\n\t\tthrow createNotImplementedError(\"process.hasUncaughtExceptionCaptureCallback\");\n\t}\n\tinitgroups() {\n\t\tthrow createNotImplementedError(\"process.initgroups\");\n\t}\n\topenStdin() {\n\t\tthrow createNotImplementedError(\"process.openStdin\");\n\t}\n\tassert() {\n\t\tthrow createNotImplementedError(\"process.assert\");\n\t}\n\tbinding() {\n\t\tthrow createNotImplementedError(\"process.binding\");\n\t}\n\t// --- attached interfaces ---\n\tpermission = { has: /* @__PURE__ */ notImplemented(\"process.permission.has\") };\n\treport = {\n\t\tdirectory: \"\",\n\t\tfilename: \"\",\n\t\tsignal: \"SIGUSR2\",\n\t\tcompact: false,\n\t\treportOnFatalError: false,\n\t\treportOnSignal: false,\n\t\treportOnUncaughtException: false,\n\t\tgetReport: /* @__PURE__ */ notImplemented(\"process.report.getReport\"),\n\t\twriteReport: /* @__PURE__ */ notImplemented(\"process.report.writeReport\")\n\t};\n\tfinalization = {\n\t\tregister: /* @__PURE__ */ notImplemented(\"process.finalization.register\"),\n\t\tunregister: /* @__PURE__ */ notImplemented(\"process.finalization.unregister\"),\n\t\tregisterBeforeExit: /* @__PURE__ */ notImplemented(\"process.finalization.registerBeforeExit\")\n\t};\n\tmemoryUsage = Object.assign(() => ({\n\t\tarrayBuffers: 0,\n\t\trss: 0,\n\t\texternal: 0,\n\t\theapTotal: 0,\n\t\theapUsed: 0\n\t}), { rss: () => 0 });\n\t// --- undefined props ---\n\tmainModule = undefined;\n\tdomain = undefined;\n\t// optional\n\tsend = undefined;\n\texitCode = undefined;\n\tchannel = undefined;\n\tgetegid = undefined;\n\tgeteuid = undefined;\n\tgetgid = undefined;\n\tgetgroups = undefined;\n\tgetuid = undefined;\n\tsetegid = undefined;\n\tseteuid = undefined;\n\tsetgid = undefined;\n\tsetgroups = undefined;\n\tsetuid = undefined;\n\t// internals\n\t_events = undefined;\n\t_eventsCount = undefined;\n\t_exiting = undefined;\n\t_maxListeners = undefined;\n\t_debugEnd = undefined;\n\t_debugProcess = undefined;\n\t_fatalException = undefined;\n\t_getActiveHandles = undefined;\n\t_getActiveRequests = undefined;\n\t_kill = undefined;\n\t_preload_modules = undefined;\n\t_rawDebug = undefined;\n\t_startProfilerIdleNotifier = undefined;\n\t_stopProfilerIdleNotifier = undefined;\n\t_tickCallback = undefined;\n\t_disconnect = undefined;\n\t_handleQueue = undefined;\n\t_pendingMessage = undefined;\n\t_channel = undefined;\n\t_send = undefined;\n\t_linkedBinding = undefined;\n}\n", "export class ReadStream {\n\tfd;\n\tisRaw = false;\n\tisTTY = false;\n\tconstructor(fd) {\n\t\tthis.fd = fd;\n\t}\n\tsetRawMode(mode) {\n\t\tthis.isRaw = mode;\n\t\treturn this;\n\t}\n}\n", "export class WriteStream {\n\tfd;\n\tcolumns = 80;\n\trows = 24;\n\tisTTY = false;\n\tconstructor(fd) {\n\t\tthis.fd = fd;\n\t}\n\tclearLine(dir, callback) {\n\t\tcallback && callback();\n\t\treturn false;\n\t}\n\tclearScreenDown(callback) {\n\t\tcallback && callback();\n\t\treturn false;\n\t}\n\tcursorTo(x, y, callback) {\n\t\tcallback && typeof callback === \"function\" && callback();\n\t\treturn false;\n\t}\n\tmoveCursor(dx, dy, callback) {\n\t\tcallback && callback();\n\t\treturn false;\n\t}\n\tgetColorDepth(env) {\n\t\treturn 1;\n\t}\n\thasColors(count, env) {\n\t\treturn false;\n\t}\n\tgetWindowSize() {\n\t\treturn [this.columns, this.rows];\n\t}\n\twrite(str, encoding, cb) {\n\t\tif (str instanceof Uint8Array) {\n\t\t\tstr = new TextDecoder().decode(str);\n\t\t}\n\t\ttry {\n\t\t\tconsole.log(str);\n\t\t} catch {}\n\t\tcb && typeof cb === \"function\" && cb();\n\t\treturn false;\n\t}\n}\n", "// Extracted from .nvmrc\nexport const NODE_VERSION = \"22.14.0\";\n", "import { hrtime as UnenvHrTime } from \"unenv/node/internal/process/hrtime\";\nimport { Process as UnenvProcess } from \"unenv/node/internal/process/process\";\nconst globalProcess = globalThis[\"process\"];\nexport const getBuiltinModule = globalProcess.getBuiltinModule;\nconst workerdProcess = getBuiltinModule(\"node:process\");\nconst isWorkerdProcessV2 = globalThis.Cloudflare.compatibilityFlags.enable_nodejs_process_v2;\nconst unenvProcess = new UnenvProcess({\n  env: globalProcess.env,\n  // `hrtime` is only available from workerd process v2\n  hrtime: isWorkerdProcessV2 ? workerdProcess.hrtime : UnenvHrTime,\n  // `nextTick` is available from workerd process v1\n  nextTick: workerdProcess.nextTick\n});\nexport const { exit, features, platform } = workerdProcess;\nexport const {\n  // Always implemented by workerd\n  env,\n  // Only implemented in workerd v2\n  hrtime,\n  // Always implemented by workerd\n  nextTick\n} = unenvProcess;\nexport const {\n  _channel,\n  _disconnect,\n  _events,\n  _eventsCount,\n  _handleQueue,\n  _maxListeners,\n  _pendingMessage,\n  _send,\n  assert,\n  disconnect,\n  mainModule\n} = unenvProcess;\nexport const {\n  // @ts-expect-error `_debugEnd` is missing typings\n  _debugEnd,\n  // @ts-expect-error `_debugProcess` is missing typings\n  _debugProcess,\n  // @ts-expect-error `_exiting` is missing typings\n  _exiting,\n  // @ts-expect-error `_fatalException` is missing typings\n  _fatalException,\n  // @ts-expect-error `_getActiveHandles` is missing typings\n  _getActiveHandles,\n  // @ts-expect-error `_getActiveRequests` is missing typings\n  _getActiveRequests,\n  // @ts-expect-error `_kill` is missing typings\n  _kill,\n  // @ts-expect-error `_linkedBinding` is missing typings\n  _linkedBinding,\n  // @ts-expect-error `_preload_modules` is missing typings\n  _preload_modules,\n  // @ts-expect-error `_rawDebug` is missing typings\n  _rawDebug,\n  // @ts-expect-error `_startProfilerIdleNotifier` is missing typings\n  _startProfilerIdleNotifier,\n  // @ts-expect-error `_stopProfilerIdleNotifier` is missing typings\n  _stopProfilerIdleNotifier,\n  // @ts-expect-error `_tickCallback` is missing typings\n  _tickCallback,\n  abort,\n  addListener,\n  allowedNodeEnvironmentFlags,\n  arch,\n  argv,\n  argv0,\n  availableMemory,\n  // @ts-expect-error `binding` is missing typings\n  binding,\n  channel,\n  chdir,\n  config,\n  connected,\n  constrainedMemory,\n  cpuUsage,\n  cwd,\n  debugPort,\n  dlopen,\n  // @ts-expect-error `domain` is missing typings\n  domain,\n  emit,\n  emitWarning,\n  eventNames,\n  execArgv,\n  execPath,\n  exitCode,\n  finalization,\n  getActiveResourcesInfo,\n  getegid,\n  geteuid,\n  getgid,\n  getgroups,\n  getMaxListeners,\n  getuid,\n  hasUncaughtExceptionCaptureCallback,\n  // @ts-expect-error `initgroups` is missing typings\n  initgroups,\n  kill,\n  listenerCount,\n  listeners,\n  loadEnvFile,\n  memoryUsage,\n  // @ts-expect-error `moduleLoadList` is missing typings\n  moduleLoadList,\n  off,\n  on,\n  once,\n  // @ts-expect-error `openStdin` is missing typings\n  openStdin,\n  permission,\n  pid,\n  ppid,\n  prependListener,\n  prependOnceListener,\n  rawListeners,\n  // @ts-expect-error `reallyExit` is missing typings\n  reallyExit,\n  ref,\n  release,\n  removeAllListeners,\n  removeListener,\n  report,\n  resourceUsage,\n  send,\n  setegid,\n  seteuid,\n  setgid,\n  setgroups,\n  setMaxListeners,\n  setSourceMapsEnabled,\n  setuid,\n  setUncaughtExceptionCaptureCallback,\n  sourceMapsEnabled,\n  stderr,\n  stdin,\n  stdout,\n  throwDeprecation,\n  title,\n  traceDeprecation,\n  umask,\n  unref,\n  uptime,\n  version,\n  versions\n} = isWorkerdProcessV2 ? workerdProcess : unenvProcess;\nconst _process = {\n  abort,\n  addListener,\n  allowedNodeEnvironmentFlags,\n  hasUncaughtExceptionCaptureCallback,\n  setUncaughtExceptionCaptureCallback,\n  loadEnvFile,\n  sourceMapsEnabled,\n  arch,\n  argv,\n  argv0,\n  chdir,\n  config,\n  connected,\n  constrainedMemory,\n  availableMemory,\n  cpuUsage,\n  cwd,\n  debugPort,\n  dlopen,\n  disconnect,\n  emit,\n  emitWarning,\n  env,\n  eventNames,\n  execArgv,\n  execPath,\n  exit,\n  finalization,\n  features,\n  getBuiltinModule,\n  getActiveResourcesInfo,\n  getMaxListeners,\n  hrtime,\n  kill,\n  listeners,\n  listenerCount,\n  memoryUsage,\n  nextTick,\n  on,\n  off,\n  once,\n  pid,\n  platform,\n  ppid,\n  prependListener,\n  prependOnceListener,\n  rawListeners,\n  release,\n  removeAllListeners,\n  removeListener,\n  report,\n  resourceUsage,\n  setMaxListeners,\n  setSourceMapsEnabled,\n  stderr,\n  stdin,\n  stdout,\n  title,\n  throwDeprecation,\n  traceDeprecation,\n  umask,\n  uptime,\n  version,\n  versions,\n  // @ts-expect-error old API\n  domain,\n  initgroups,\n  moduleLoadList,\n  reallyExit,\n  openStdin,\n  assert,\n  binding,\n  send,\n  exitCode,\n  channel,\n  getegid,\n  geteuid,\n  getgid,\n  getgroups,\n  getuid,\n  setegid,\n  seteuid,\n  setgid,\n  setgroups,\n  setuid,\n  permission,\n  mainModule,\n  _events,\n  _eventsCount,\n  _exiting,\n  _maxListeners,\n  _debugEnd,\n  _debugProcess,\n  _fatalException,\n  _getActiveHandles,\n  _getActiveRequests,\n  _kill,\n  _preload_modules,\n  _rawDebug,\n  _startProfilerIdleNotifier,\n  _stopProfilerIdleNotifier,\n  _tickCallback,\n  _disconnect,\n  _handleQueue,\n  _pendingMessage,\n  _channel,\n  _send,\n  _linkedBinding\n};\nexport default _process;\n", "import { default as defaultExport } from \"@cloudflare/unenv-preset/node/process\";\nglobalThis.process = defaultExport;", "export interface ChatRequestBody {\n  session?: string;\n  message: string;\n  page?: string;\n  service?: string;\n  source?: string;\n  temperature?: number;\n  stream?: boolean;\n}\n\ninterface ChatContextDoc { id: string; score: number; text: string }\n\nconst MAX_HISTORY_PAIRS = 12;\nconst MAX_CONTEXT_DOCS = 4;\nconst MAX_TOKENS_REPLY = 512;\nconst DEFAULT_MODEL = 'gpt-4o-mini';\nconst DEFAULT_OPENAI_MODEL = 'gpt-4o-mini';\n\nfunction json(data: any, status = 200) {\n  return new Response(JSON.stringify(data), { status, headers: { 'Content-Type': 'application/json; charset=utf-8' } });\n}\n\nfunction shortId() { return Math.random().toString(36).slice(2, 10); }\n\nasync function parseJSON(req: Request) { try { return await req.json(); } catch { return null; } }\n\nasync function rateLimit(env: any, session: string, ip: string | null) {\n  if (!env.PAINTER_KV) return;\n  const key = `rl:${session || ip || 'anon'}`;\n  const raw = await env.PAINTER_KV.get(key);\n  const count = raw ? parseInt(raw, 10) : 0;\n  if (count > 40) throw new Error('rate_limited');\n  await env.PAINTER_KV.put(key, String(count + 1), { expirationTtl: 300 });\n}\n\nasync function fetchHistory(env: any, session: string) {\n  try {\n    const { results } = await env.DB.prepare(\n      `SELECT question, answer FROM chat_log WHERE session = ? ORDER BY id DESC LIMIT ?`\n    ).bind(session, MAX_HISTORY_PAIRS).all();\n    return (results || []).reverse();\n  } catch {\n    return [];\n  }\n}\n\nfunction buildHistoryMessages(history: any[]) {\n  const msgs: { role: 'user' | 'assistant'; content: string }[] = [];\n  for (const row of history) {\n    if (row.question) msgs.push({ role: 'user', content: row.question });\n    if (row.answer) msgs.push({ role: 'assistant', content: row.answer });\n  }\n  return msgs;\n}\n\nasync function retrieveDocs(env: any, userMsg: string): Promise<ChatContextDoc[]> {\n  if (!env.VECTORIZE || !env.AI) return [];\n  try {\n    const embeddingResp: any = await env.AI.run('@cf/baai/bge-small-en-v1.5', { text: userMsg });\n    const vector: number[] = embeddingResp?.data?.[0]?.embedding || embeddingResp?.embedding || [];\n    if (!Array.isArray(vector) || !vector.length) return [];\n    const queryResp = await env.VECTORIZE.query(vector, { topK: MAX_CONTEXT_DOCS, returnValues: true });\n    const docs: ChatContextDoc[] = (queryResp.matches || []).map((m: any, i: number) => ({\n      id: m.id || String(i),\n      score: m.score,\n      text: (m.values?.text || m.metadata?.text || '').toString().slice(0, 1200)\n    })).filter((d: ChatContextDoc) => d.text);\n    return docs;\n  } catch (e) {\n    return [];\n  }\n}\n\nfunction classifyIntent(text: string) {\n  const lower = text.toLowerCase();\n  return {\n    wantsEstimate: /estimate|quote|cost|price/.test(lower),\n    scheduling: /schedule|when can|availability|book/.test(lower),\n    greeting: /^(hi|hello|hey|good (morning|afternoon|evening))\\b/.test(lower),\n    farewell: /(bye|thank you|thanks)/.test(lower)\n  };\n}\n\nfunction systemPrompt(env: any) {\n  return `You are Paint Guru, the expert, professional painting consultant for Dependable Painting (Baldwin & Mobile County, Alabama).\nMANDATES:\n- Be accurate, concise, friendly, and professional.\n- Only answer about painting, surfaces, coatings, preparation, tools, safety, scheduling guidance.\n- Allowed topics ONLY: painting techniques, surface prep, coatings, primers, Sherwin-Williams products (general characteristics, appropriate uses), our services, service areas, scheduling expectations, seasonal considerations (humidity, UV, salt air), safety & cleanup.\n- Disallowed: precise pricing numbers, unrelated trades, legal/medical/financial topics, unrelated home improvement outside painting context. Politely redirect if outside scope.\n- If user requests a quote or pricing, DO NOT provide exact prices or line-item costs. Instead outline factors (prep, substrate, square footage, coatings) and suggest a free in-person estimate by calling (251) 423-5855.\n- NEVER invent company data. If unsure, admit uncertainty and offer a human follow-up.\n- Localize examples to Gulf Coast climate (humidity, UV, salt air) when relevant.\n- Cite retrieved context snippets as [Doc #] when used.\n- Encourage surface preparation best practices.\n- Always end with a concise CTA: \"Call (251) 423-5855 for a fast, accurate estimate\" OR suggest a relevant internal page (e.g. /interior-painting.html, /exterior-painting.html, /cabinet-painting.html, /commercial-painting.html, /contact-form.html) depending on user intent.\nOUTPUT STYLE:\n- Short paragraphs (2-4 sentences) or lists.\n- Provide actionable steps when user asks how.\n- End with a helpful invitation if appropriate.`;\n}\n\nfunction buildContextBlock(docs: ChatContextDoc[]): string {\n  if (!docs.length) return '';\n  return 'Retrieved Context:\\n' + docs.map((d, i) => `[Doc ${i+1}] ${d.text}`).join('\\n---\\n');\n}\n\nasync function callWorkersAI(env: any, messages: any[], temperature: number) {\n  const resp = await env.AI.run({\n    model: env.AI_MODEL || DEFAULT_MODEL,\n    messages,\n    max_tokens: MAX_TOKENS_REPLY,\n    temperature\n  });\n  return { text: resp?.choices?.[0]?.message?.content || '', provider: 'workers-ai' };\n}\n\nasync function callOpenAI(env: any, messages: any[], temperature: number) {\n  const apiKey = env.OPENAI_API_KEY;\n  if (!apiKey) throw new Error('openai_missing');\n  const resp = await fetch('https://api.openai.com/v1/chat/completions', {\n    method: 'POST',\n    headers: { 'Authorization': `Bearer ${apiKey}`, 'Content-Type': 'application/json' },\n    body: JSON.stringify({\n      model: env.OPENAI_MODEL || DEFAULT_OPENAI_MODEL,\n      messages,\n      temperature,\n      max_tokens: MAX_TOKENS_REPLY\n    })\n  });\n  if (!resp.ok) {\n    const tx = await resp.text().catch(() => '');\n    throw new Error(`openai_http_${resp.status}:${tx.slice(0,200)}`);\n  }\n  const data = await resp.json();\n  return { text: data?.choices?.[0]?.message?.content || '', provider: 'openai' };\n}\n\nasync function persist(env: any, session: string, question: string, answer: string, provider: string, page: string | undefined, ua: string | null) {\n  try {\n    await env.DB.prepare(\n      \"INSERT INTO chat_log (ts, session, question, answer, ai_provider, user_agent, page) VALUES (datetime('now'),?,?,?,?,?,?)\"\n    ).bind(session, question, answer, provider, ua, page || '').run();\n  } catch {}\n  try {\n    if (env.CHAT_QUEUE) {\n      await env.CHAT_QUEUE.send({ session, question, answer, provider, page, ts: Date.now() });\n    }\n  } catch {}\n}\n\nfunction sseStream(text: string) {\n  const encoder = new TextEncoder();\n  const sentences = text.match(/[^.!?]+[.!?]?/g) || [text];\n  let i = 0;\n  return new ReadableStream({\n    pull(controller) {\n      if (i >= sentences.length) { controller.enqueue(encoder.encode('event: end\\ndata: [DONE]\\n\\n')); controller.close(); return; }\n      const chunk = sentences[i++].trim();\n      if (chunk) controller.enqueue(encoder.encode(`data: ${JSON.stringify(chunk)}\\n\\n`));\n    }\n  });\n}\n\nexport async function handleChat(env: any, request: Request) {\n  if (request.method !== 'POST') return json({ error: 'method_not_allowed' }, 405);\n  const body = await parseJSON(request) as ChatRequestBody | null;\n  if (!body || !body.message) return json({ error: 'message_required' }, 400);\n  const session = (body.session || '').slice(0,64) || shortId();\n  const temperature = Number.isFinite(body.temperature) ? Number(body.temperature) : (env.AI_TEMP ? Number(env.AI_TEMP) : 0.3);\n  const ip = request.headers.get('CF-Connecting-IP');\n\n  try { await rateLimit(env, session, ip); } catch { return json({ error: 'rate_limited' }, 429); }\n\n  const historyRows = await fetchHistory(env, session);\n  const historyMsgs = buildHistoryMessages(historyRows);\n  const docs = await retrieveDocs(env, body.message);\n  const intents = classifyIntent(body.message);\n\n  const contextBlock = buildContextBlock(docs);\n  const dynamicDirectives: string[] = [];\n  if (intents.wantsEstimate) dynamicDirectives.push('User is seeking a cost/estimate: Provide realistic ballpark ranges & factors, then advise free on-site estimate (call (251) 423-5855).');\n  if (intents.scheduling) dynamicDirectives.push('User intent: scheduling. Offer phone scheduling and typical lead times.');\n  if (intents.greeting) dynamicDirectives.push('Acknowledge greeting briefly.');\n  if (intents.farewell) dynamicDirectives.push('Offer a helpful closing, ask if they need anything else.');\n\n  const dynamicBlock = dynamicDirectives.length ? ('Dynamic Guidance:\\n' + dynamicDirectives.join('\\n')) : '';\n\n  const system = systemPrompt(env) + (contextBlock ? '\\n\\n' + contextBlock : '') + (dynamicBlock ? '\\n\\n' + dynamicBlock : '');\n\n  const messages = [\n    { role: 'system', content: system },\n    ...historyMsgs,\n    { role: 'user', content: body.message }\n  ];\n\n  let aiResp: { text: string; provider: string } | null = null;\n  let error: string | null = null;\n  try {\n    if (env.AI) {\n      aiResp = await callWorkersAI(env, messages, temperature);\n    } else if (env.OPENAI_API_KEY) {\n      aiResp = await callOpenAI(env, messages, temperature);\n    } else {\n      throw new Error('no_ai_provider');\n    }\n  } catch (e: any) {\n    error = e?.message || String(e);\n  }\n  if (!aiResp) return json({ error: error || 'ai_failed' }, 502);\n\n  persist(env, session, body.message, aiResp.text, aiResp.provider, body.page, request.headers.get('User-Agent'));\n\n  if (body.stream) {\n    const stream = sseStream(aiResp.text);\n    return new Response(stream, {\n      status: 200,\n      headers: {\n        'Content-Type': 'text/event-stream; charset=utf-8',\n        'Cache-Control': 'no-cache',\n        'X-Session': session\n      }\n    });\n  }\n\n  return json({\n    ok: true,\n    session,\n    reply: aiResp.text,\n    // Backwards compatibility for earlier widget expecting 'answer'\n    answer: aiResp.text,\n    provider: aiResp.provider,\n    intents,\n    used: {\n      history_pairs: historyRows.length,\n      context_docs: docs.length\n    }\n  });\n}\n", "// Advanced analytics & marketing tracking endpoint\n// Provides enriched event ingestion, session attribution, channel classification,\n// lightweight bot filtering, aggregation funnels, and queue fan-out.\n// Designed to complement the simpler handleTrack in src/index.ts.\n\nexport interface AdvancedTrackBody {\n  type?: string;\n  page?: string;\n  title?: string;\n  service?: string;\n  source?: string;\n  medium?: string;\n  campaign?: string;\n  term?: string;\n  content?: string;\n  device?: string;\n  city?: string;\n  country?: string;\n  region?: string;\n  zip?: string;\n  area?: string;\n  session?: string;\n  user_id?: string;\n  scroll_pct?: number;\n  duration_ms?: number;\n  value?: number;\n  currency?: string;\n  referrer?: string;\n  utm_source?: string;\n  utm_medium?: string;\n  utm_campaign?: string;\n  utm_term?: string;\n  utm_content?: string;\n  gclid?: string;\n  fbclid?: string;\n  ts?: string;\n  meta?: Record<string, any>;\n}\n\ninterface EnvBindings {\n  DB: any;\n  GA4_API_SECRET?: string;\n  GA4_QUEUE?: any; // Queue binding (Cloudflare)\n  ANALYTICS_EVENTS?: any; // Analytics Engine dataset\n  PAINTER_KV: any; // KV namespace\n}\n\n// Basic JSON helper (duplicated minimal to keep file self-contained)\nfunction j(data: any, status = 200, headers: Record<string, string> = {}) {\n  return new Response(JSON.stringify(data), { status, headers: { 'Content-Type': 'application/json; charset=utf-8', ...headers } });\n}\n\nfunction safeNumber(n: any, d = 0) { const v = Number(n); return Number.isFinite(v) ? v : d; }\n\n// Channel / medium classification heuristics\nfunction classifyChannel(b: AdvancedTrackBody): { channel: string; source: string; medium: string } {\n  const src = (b.source || b.utm_source || '').toLowerCase();\n  const med = (b.medium || b.utm_medium || '').toLowerCase();\n  const ref = (b.referrer || '').toLowerCase();\n  if (b.gclid) return { channel: 'Paid Search', source: 'google', medium: 'cpc' };\n  if (/facebook|fb\\.com/.test(src) || /facebook|fb\\.com/.test(ref)) return { channel: 'Paid Social', source: 'facebook', medium: med || 'paid_social' };\n  if (/tiktok/.test(src) || /tiktok/.test(ref)) return { channel: 'Paid Social', source: 'tiktok', medium: med || 'paid_social' };\n  if (/google/.test(src) && (med === 'organic' || !med)) return { channel: 'Organic Search', source: 'google', medium: 'organic' };\n  if (/bing|yahoo|duckduckgo/.test(ref)) return { channel: 'Organic Search', source: 'other_search', medium: 'organic' };\n  if (med === 'email') return { channel: 'Email', source: src || 'email', medium: 'email' };\n  if (med === 'affiliate') return { channel: 'Affiliate', source: src || 'affiliate', medium: 'affiliate' };\n  if (med === 'cpc' || med === 'ppc' || med === 'paid_search') return { channel: 'Paid Search', source: src || 'paid', medium: 'cpc' };\n  if (ref && !ref.includes('dependablepainting.work')) return { channel: 'Referral', source: new URL('https://' + ref.replace(/^https?:\\/\\//,'')).hostname.replace(/^www\\./,'') || 'referral', medium: 'referral' };\n  return { channel: 'Direct', source: 'direct', medium: 'direct' };\n}\n\n// Lightweight bot detection\nfunction isBot(ua: string | null): boolean {\n  if (!ua) return false;\n  return /(bot|crawl|spider|slurp|headless|phantom|monitor)/i.test(ua) && !/chrome\\/[\\d.]+ safari\\//i.test(ua);\n}\n\n// Funnel stage inference (very heuristic)\nfunction inferFunnel(type: string, page: string): string {\n  const t = type.toLowerCase();\n  if (t === 'page_view') {\n    if (/thank-you/.test(page)) return 'Conversion';\n    if (/contact|estimate|quote/.test(page)) return 'Consideration';\n    return 'Awareness';\n  }\n  if (/form_submit|lead|conversion/.test(t)) return 'Conversion';\n  if (/scroll|engagement/.test(t)) return 'Engagement';\n  return 'Other';\n}\n\nasync function rateLimitKV(kv: any, key: string, limit: number, windowSecs: number): Promise<boolean> {\n  try {\n    const nowBucket = Math.floor(Date.now() / (windowSecs * 1000));\n    const storageKey = `rt:${key}:${nowBucket}`;\n    const current = await kv.get(storageKey);\n    if (!current) {\n      await kv.put(storageKey, '1', { expirationTtl: windowSecs + 5 });\n      return true;\n    }\n    const next = parseInt(current, 10) + 1;\n    if (next > limit) return false;\n    await kv.put(storageKey, String(next), { expirationTtl: windowSecs + 5 });\n    return true;\n  } catch { return true; }\n}\n\nasync function persistEvent(env: EnvBindings, record: any) {\n  try {\n    await env.DB.prepare(\n      `INSERT INTO lead_events (ts, day, hour, type, page, service, source, device, city, country, zip, area, session, scroll_pct, duration_ms, referrer, utm_source, utm_medium, utm_campaign, gclid)\n       VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)`\n    ).bind(\n      record.ts,\n      record.day,\n      record.hour,\n      record.type,\n      record.page,\n      record.service,\n      record.source,\n      record.device,\n      record.city,\n      record.country,\n      record.zip,\n      record.area,\n      record.session,\n      record.scroll_pct,\n      record.duration_ms,\n      record.referrer,\n      record.utm_source,\n      record.utm_medium,\n      record.utm_campaign,\n      record.gclid\n    ).run();\n  } catch (e) {\n    console.error('D1 advanced event insert failed', e); // eslint-disable-line no-console\n  }\n}\n\nfunction buildDerived(record: any) {\n  const funnel_stage = inferFunnel(record.type, record.page);\n  return { funnel_stage };\n}\n\nasync function maybeAnalyticsEngine(env: EnvBindings, enriched: any) {\n  if (!env.ANALYTICS_EVENTS) return;\n  try {\n    await env.ANALYTICS_EVENTS.writeDataPoint({\n      indexes: [enriched.channel, enriched.funnel_stage, enriched.type],\n      blobs: [JSON.stringify(enriched)],\n      doubles: [enriched.value || 0]\n    });\n  } catch (e) { /* ignore */ }\n}\n\nasync function fanOutQueues(env: EnvBindings, enriched: any) {\n  try {\n    if (env.GA4_QUEUE) {\n      await env.GA4_QUEUE.send({\n        type: enriched.type,\n        page: enriched.page,\n        session: enriched.session,\n        city: enriched.city,\n        service: enriched.service,\n        source: enriched.source\n      });\n    }\n  } catch (_) {}\n}\n\nexport async function handleAdvancedTrack(env: EnvBindings, request: Request) {\n  const body: AdvancedTrackBody | null = await request.json().catch(() => null);\n  if (!body) return j({ error: 'Invalid JSON' }, 400);\n  const ua = request.headers.get('User-Agent');\n  if (isBot(ua)) return j({ ok: true, skipped: 'bot' });\n\n  const session = (body.session || crypto.randomUUID()).toString().slice(0, 120);\n\n  // Rate limit per session\n  const allowed = await rateLimitKV(env.PAINTER_KV, `adv:${session}`, 120, 60 * 5); // 120 events / 5 min\n  if (!allowed) return j({ error: 'rate_limited' }, 429);\n\n  const tsDate = body.ts ? new Date(body.ts) : new Date();\n  const iso = tsDate.toISOString();\n  const record = {\n    ts: iso,\n    day: iso.slice(0, 10),\n    hour: iso.slice(11, 13),\n    type: (body.type || 'page_view').toString().slice(0, 60),\n    page: (body.page || '').toString().slice(0, 300),\n    service: (body.service || '').toString().slice(0, 120),\n    source: (body.source || body.utm_source || '').toString().slice(0, 120),\n    device: (body.device || '').toString().slice(0, 60),\n    city: (body.city || '').toString().slice(0, 120),\n    country: (body.country || '').toString().slice(0, 120),\n    zip: (body.zip || '').toString().slice(0, 40),\n    area: (body.area || '').toString().slice(0, 80),\n    session,\n    scroll_pct: safeNumber(body.scroll_pct),\n    duration_ms: safeNumber(body.duration_ms),\n    referrer: (body.referrer || '').toString().slice(0, 300),\n    utm_source: (body.utm_source || '').toString().slice(0, 120),\n    utm_medium: (body.utm_medium || '').toString().slice(0, 120),\n    utm_campaign: (body.utm_campaign || '').toString().slice(0, 120),\n    gclid: (body.gclid || '').toString().slice(0, 200)\n  };\n\n  // Derivations\n  const channelInfo = classifyChannel(body);\n  const derived = buildDerived(record);\n  const value = safeNumber(body.value, 0);\n\n  const enriched = { ...record, ...channelInfo, ...derived, value, meta: body.meta || {}, ua };\n\n  await persistEvent(env, record);\n  await maybeAnalyticsEngine(env, enriched);\n  await fanOutQueues(env, enriched);\n\n  // Return enriched classification and minimal ack\n  return j({ ok: true, channel: channelInfo.channel, funnel_stage: derived.funnel_stage, value });\n}\n", "// Advanced contact / estimate form handling logic\n// Features:\n//  - Input validation & normalization\n//  - Basic duplicate suppression (same phone+service+message)\n//  - Risk scoring (spam heuristics)\n//  - Immediate DB persistence (leads + lead_events)\n//  - Admin notification email (rich details)\n//  - Customer auto-reply via queue (LEAD_NOTIFY_QUEUE) for resilience\n//  - Analytics fan-out to GA4 queue (optional)\n//  - Graceful degradation: email / queue failures do not block success response\n\ninterface ContactBody {\n\tname?: string;\n\temail?: string;\n\tphone?: string;\n\tcity?: string;\n\tzip?: string;\n\tservice?: string;\n\tmessage?: string;\n\tdescription?: string;\n\tpage?: string;\n\tsession?: string;\n\tsource?: string;\n\tutm_source?: string;\n\tutm_medium?: string;\n\tutm_campaign?: string;\n\tutm_term?: string;\n\tutm_content?: string;\n\tgclid?: string;\n\treferrer?: string;\n}\n\nfunction j(data: any, status = 200, headers: Record<string,string> = {}) {\n\treturn new Response(JSON.stringify(data), { status, headers: { 'Content-Type': 'application/json; charset=utf-8', ...headers } });\n}\n\nfunction normalizePhone(raw: string | undefined): { raw: string; digits: string } {\n\tif (!raw) return { raw: '', digits: '' };\n\tconst digits = raw.replace(/\\D+/g, '').slice(0, 15);\n\treturn { raw: raw.trim(), digits };\n}\n\nfunction riskScore(msg: string, body: ContactBody): { score: number; reasons: string[] } {\n\tlet score = 0;\n\tconst reasons: string[] = [];\n\tconst m = msg.toLowerCase();\n\tif (m.length < 5) { score += 10; reasons.push('very_short'); }\n\tif (/https?:\\/\\//.test(m)) { score += 25; reasons.push('link_present'); }\n\tif ((m.match(/free quote|seo|backlink|guest post/gi)||[]).length) { score += 25; reasons.push('spam_keywords'); }\n\tif (body.email && /@(example|test|mailinator|tempmail)/i.test(body.email)) { score += 15; reasons.push('throwaway_email'); }\n\treturn { score, reasons };\n}\n\nasync function findDuplicate(env: any, phoneDigits: string, email: string | undefined, service: string | undefined, message: string): Promise<boolean> {\n\t// Since leads table lacks ts column, dedupe by exact same (phone OR email) + service + message.\n\ttry {\n\t\tif (!phoneDigits && !email) return false;\n\t\tconst where: string[] = [];\n\t\tconst args: any[] = [];\n\t\tif (phoneDigits) { where.push('phone LIKE ?'); args.push('%' + phoneDigits.slice(-6)); }\n\t\tif (email) { where.push('email = ?'); args.push(email); }\n\t\tconst clause = where.length ? '(' + where.join(' OR ') + ')' : '1=0';\n\t\tconst q = `SELECT id FROM leads WHERE ${clause} AND service = ? AND message = ? LIMIT 1`;\n\t\tconst row = await env.DB.prepare(q).bind(...args, service || '', message).first();\n\t\treturn !!row;\n\t} catch (_) { return false; }\n}\n\nasync function insertLead(env: any, lead: any) {\n\tconst res = await env.DB.prepare(\n\t\t`INSERT INTO leads (name, email, phone, city, zip, service, page, session, source, message)\n\t\t VALUES (?,?,?,?,?,?,?,?,?,?)`\n\t).bind(\n\t\tlead.name,\n\t\tlead.email,\n\t\tlead.phone,\n\t\tlead.city,\n\t\tlead.zip,\n\t\tlead.service,\n\t\tlead.page,\n\t\tlead.session,\n\t\tlead.source,\n\t\tlead.message\n\t).run();\n\treturn res.meta?.last_row_id ? String(res.meta.last_row_id) : undefined;\n}\n\nasync function insertEvent(env: any, lead: any) {\n\ttry {\n\t\tconst ts = new Date().toISOString();\n\t\tawait env.DB.prepare(\n\t\t\t`INSERT INTO lead_events (ts, day, hour, type, page, service, source, device, city, country, zip, area, session, scroll_pct, duration_ms, referrer, utm_source, utm_medium, utm_campaign, gclid)\n\t\t\t VALUES (?, date(?), strftime('%H', ?), ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)`\n\t\t).bind(\n\t\t\tts, ts, ts,\n\t\t\t'form_submit',\n\t\t\tlead.page || '',\n\t\t\tlead.service || '',\n\t\t\tlead.source || '',\n\t\t\t'', // device\n\t\t\tlead.city || '',\n\t\t\t'', // country (not provided)\n\t\t\tlead.zip || '',\n\t\t\t'', // area\n\t\t\tlead.session || '',\n\t\t\t0, 0,\n\t\t\tlead.referrer || '',\n\t\t\tlead.utm_source || '',\n\t\t\tlead.utm_medium || '',\n\t\t\tlead.utm_campaign || '',\n\t\t\tlead.gclid || ''\n\t\t).run();\n\t} catch (_) {}\n}\n\nasync function sendAdminEmail(env: any, lead: any, risk: { score: number; reasons: string[] }) {\n\tif (!env.SEB || !env.SEB.send) return;\n\tconst subject = `[LEAD] ${lead.service || 'General'} | ${lead.name} | ${lead.phone || lead.email || 'no-contact'}`;\n\tconst lines = [\n\t\t'New contact form submission:',\n\t\t`Name: ${lead.name}`,\n\t\t`Email: ${lead.email || '\u2014'}`,\n\t\t`Phone: ${lead.phone || '\u2014'}`,\n\t\t`City: ${lead.city || '\u2014'}`,\n\t\t`Zip: ${lead.zip || '\u2014'}`,\n\t\t`Service: ${lead.service || '\u2014'}`,\n\t\t`Source: ${lead.source || '\u2014'}`,\n\t\t`UTM: ${lead.utm_source || ''} / ${lead.utm_medium || ''} / ${lead.utm_campaign || ''}`,\n\t\t`Session: ${lead.session || '\u2014'}`,\n\t\t`Page: ${lead.page}`,\n\t\t`Referrer: ${lead.referrer || '\u2014'}`,\n\t\t`Message:\\n${lead.message}`,\n\t\t`Risk Score: ${risk.score} (${risk.reasons.join(',') || 'clean'})`\n\t];\n\tconst text = lines.join('\\n');\n\tconst from = env.FROM_ADDR || env.SENDER || 'no-reply@dependablepainting.work';\n\t// Accept multiple possible variable names for the destination list\n\tconst rawList = env.LEAD_ALERTS || env.ADMIN_EMAIL || env.OWNER_EMAIL || env.TO_ADDR || env.DESTINATION;\n\tconst toList = (rawList || 'just-paint-it@dependablepainting.work').split(/[,;\\s]+/).filter(Boolean);\n\tfor (const to of toList) {\n\t\ttry {\n\t\t\t// @ts-ignore\n\t\t\tif (typeof EmailMessage !== 'undefined') {\n\t\t\t\t// @ts-ignore\n\t\t\t\tconst msg = new EmailMessage(from, to, subject);\n\t\t\t\t// @ts-ignore\n\t\t\t\tmsg.setBody('text/plain', text);\n\t\t\t\tawait env.SEB.send(msg);\n\t\t\t} else {\n\t\t\t\tawait env.SEB.send({ from, to, subject, content: text });\n\t\t\t}\n\t\t} catch (_) { /* swallow per recipient */ }\n\t}\n}\n\nasync function queueCustomerAutoReply(env: any, lead: any) {\n\tif (!lead.email) return;\n\ttry {\n\t\tif (env.LEAD_NOTIFY_QUEUE) {\n\t\t\tconst subject = `Thanks for contacting ${env.SITE_NAME || 'Dependable Painting'}`;\n\t\t\tconst html = `<p>Hi ${lead.name || 'there'},</p><p>We received your request about <strong>${lead.service || 'painting'}</strong>. We'll call you shortly. Need immediate help? Call <strong>(251) 423-5855</strong>.</p><p>\u2014 ${env.SITE_NAME || 'Dependable Painting'}</p>`;\n\t\t\tawait env.LEAD_NOTIFY_QUEUE.send({ email: lead.email, name: lead.name, subject, html });\n\t\t}\n\t} catch (_) {}\n}\n\nasync function fanOutAnalytics(env: any, lead: any) {\n\ttry {\n\t\tif (env.GA4_QUEUE) {\n\t\t\tawait env.GA4_QUEUE.send({ type: 'lead_submit', page: lead.page, session: lead.session, city: lead.city, service: lead.service, source: lead.source });\n\t\t}\n\t} catch (_) {}\n}\n\nexport async function handleContact(env: any, request: Request) {\n\tconst body: ContactBody | null = await request.json().catch(() => null);\n\tif (!body) return j({ error: 'Invalid JSON' }, 400);\n\tconst name = (body.name || '').trim().slice(0, 160);\n\tconst email = (body.email || '').trim().slice(0, 200).toLowerCase();\n\tconst { raw: phoneRaw, digits: phoneDigits } = normalizePhone(body.phone);\n\tconst phone = phoneRaw.slice(0, 40);\n\tconst service = (body.service || '').trim().slice(0, 160);\n\tconst message = (body.message || body.description || '').trim().slice(0, 4000);\n\tconst page = (body.page || '/contact-form').slice(0, 300);\n\tconst session = (body.session || '').slice(0, 120);\n\tconst source = (body.source || body.utm_source || 'web').slice(0, 120);\n\tif (!name || !service || !message || (!phone && !email)) {\n\t\treturn j({ error: 'Missing required fields' }, 400);\n\t}\n\n\tconst dup = await findDuplicate(env, phoneDigits, email, service, message);\n\n\tconst leadRecord = {\n\t\tname,\n\t\temail,\n\t\tphone,\n\t\tcity: (body.city || '').slice(0, 160),\n\t\tzip: (body.zip || '').slice(0, 40),\n\t\tservice,\n\t\tpage,\n\t\tsession,\n\t\tsource,\n\t\tmessage,\n\t\tutm_source: body.utm_source || '',\n\t\tutm_medium: body.utm_medium || '',\n\t\tutm_campaign: body.utm_campaign || '',\n\t\tgclid: body.gclid || '',\n\t\treferrer: body.referrer || ''\n\t};\n\n\tlet lead_id: string | undefined;\n\tif (!dup) {\n\t\ttry {\n\t\t\tlead_id = await insertLead(env, leadRecord);\n\t\t\tawait insertEvent(env, leadRecord);\n\t\t} catch (e) {\n\t\t\treturn j({ error: 'database_error' }, 500);\n\t\t}\n\t}\n\n\tconst risk = riskScore(message, body);\n\n\t// Fire and forget async side-effects\n\trequest.signal.addEventListener('abort', () => { /* ignore */ });\n\tawait Promise.all([\n\t\tsendAdminEmail(env, { ...leadRecord, lead_id }, risk),\n\t\tqueueCustomerAutoReply(env, leadRecord),\n\t\tfanOutAnalytics(env, leadRecord)\n\t]);\n\n\treturn j({ ok: true, lead_id, duplicate: dup, risk_score: risk.score, risk_reasons: risk.reasons });\n}\n\n", "// NOTE: Use explicit relative paths so Wrangler/Workers bundler resolves modules reliably in production.\n// Previously used bare specifiers 'api/...', which can fail without custom module resolution.\nimport { handleChat as advancedChat } from '../api/chat';\nimport { handleAdvancedTrack } from '../api/track';\nimport { handleContact } from '../api/estimate';\n\nfunction json(data: any, status = 200, headers: Record<string, string> = {}) {\n  return new Response(JSON.stringify(data), {\n    status,\n    headers: { 'Content-Type': 'application/json; charset=utf-8', ...headers }\n  });\n}\n\nasync function parseJSON(request: Request) {\n  try { return await request.json(); } catch (_) { return null; }\n}\n\n// Generic form submission (lightweight, stores as lead_events type=form_submit and optionally email notify)\nasync function handleForm(env: any, request: Request) {\n  const body = await parseJSON(request);\n  if (!body) return json({ error: 'Invalid JSON' }, 400);\n  const ts = new Date().toISOString();\n  const page = (body.page || '/').toString().slice(0, 300);\n  const session = (body.session || '').toString().slice(0, 120);\n  const service = (body.service || '').toString().slice(0, 120);\n  const source = (body.source || '').toString().slice(0, 120);\n  try {\n    await env.DB.prepare(\n      `INSERT INTO lead_events (ts, day, hour, type, page, service, source, device, city, country, zip, area, session, scroll_pct, duration_ms, referrer, utm_source, utm_medium, utm_campaign, gclid)\n       VALUES (?, date(?), strftime('%H', ?), ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)`\n    ).bind(\n      ts, ts, ts,\n      'form_submit',\n      page,\n      service,\n      source,\n      body.device || '',\n      body.city || '',\n      body.country || '',\n      body.zip || '',\n      body.area || '',\n      session,\n      Number.isFinite(Number(body.scroll_pct)) ? Number(body.scroll_pct) : 0,\n      Number.isFinite(Number(body.duration_ms)) ? Number(body.duration_ms) : 0,\n      body.referrer || '',\n      body.utm_source || '',\n      body.utm_medium || '',\n      body.utm_campaign || '',\n      body.gclid || ''\n    ).run();\n  } catch (e) {\n    return json({ error: 'db error' }, 500);\n  }\n  return json({ ok: true });\n}\n\n// Call event (e.g., phone click) stored as type=click_call\nasync function handleCall(env: any, request: Request) {\n  const body = await parseJSON(request);\n  if (!body) return json({ error: 'Invalid JSON' }, 400);\n  const ts = new Date().toISOString();\n  try {\n    await env.DB.prepare(\n      `INSERT INTO lead_events (ts, day, hour, type, page, service, source, device, city, country, zip, area, session, scroll_pct, duration_ms, referrer, utm_source, utm_medium, utm_campaign, gclid)\n       VALUES (?, date(?), strftime('%H', ?), ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)`\n    ).bind(\n      ts, ts, ts,\n      'click_call',\n      body.page || '',\n      body.service || '',\n      body.source || '',\n      body.device || '',\n      body.city || '',\n      body.country || '',\n      body.zip || '',\n      body.area || '',\n      body.session || '',\n      Number.isFinite(Number(body.scroll_pct)) ? Number(body.scroll_pct) : 0,\n      Number.isFinite(Number(body.duration_ms)) ? Number(body.duration_ms) : 0,\n      body.referrer || '',\n      body.utm_source || '',\n      body.utm_medium || '',\n      body.utm_campaign || '',\n      body.gclid || ''\n    ).run();\n  } catch (e) {\n    return json({ error: 'db error' }, 500);\n  }\n  return json({ ok: true });\n}\n\nasync function handleStats(env: any) {\n  const thirty = new Date(Date.now() - 30*24*3600*1000).toISOString();\n  try {\n    const events = await env.DB.prepare(\n      `SELECT type, COUNT(*) as cnt FROM lead_events WHERE ts >= ? GROUP BY type ORDER BY cnt DESC`\n    ).bind(thirty).all();\n    const leads = await env.DB.prepare(\n      `SELECT COUNT(*) as cnt FROM leads WHERE rowid IN (SELECT id FROM leads WHERE 1)`\n    ).all();\n    return json({ ok: true, event_counts: events.results || [], total_leads: (leads.results?.[0]?.cnt)||0 });\n  } catch (e) {\n    return json({ error: 'db error' }, 500);\n  }\n}\n\nasync function handleChatHistory(env: any, request: Request) {\n  const url = new URL(request.url);\n  const session = url.searchParams.get('session') || '';\n  const limit = Math.min(parseInt(url.searchParams.get('limit') || '20', 10) || 20, 100);\n  if (!session) return json({ error: 'session required' }, 400);\n  try {\n    const { results } = await env.DB.prepare(\n      `SELECT id, ts, question, answer, ai_provider, page FROM chat_log WHERE session = ? ORDER BY id DESC LIMIT ?`\n    ).bind(session, limit).all();\n    return json({ ok: true, items: results });\n  } catch (e) {\n    return json({ error: 'db error' }, 500);\n  }\n}\n\n// Chat: inline handler removed; using advancedChat (see ../api/chat.ts)\n\n// Tracking event ingestion\n// Accepts: { type, page?, service?, source?, device?, city?, country?, zip?, area?, session?, scroll_pct?, duration_ms?, referrer?, utm_source?, utm_medium?, utm_campaign?, gclid?, ts? }\n// If ts omitted, server time used. Stores row in lead_events and optionally forwards lightweight event to GA4.\nasync function handleTrack(env: any, request: Request) {\n  const body = await parseJSON(request);\n  if (!body) return json({ error: 'Invalid JSON' }, 400);\n  const clientTs = typeof body.ts === 'string' ? body.ts : null;\n  const now = clientTs ? new Date(clientTs) : new Date();\n  const iso = now.toISOString();\n  const day = iso.slice(0, 10);\n  const hour = iso.slice(11, 13);\n  const record = {\n    type: (body.type || 'event').toString().slice(0, 50),\n    page: body.page || '',\n    service: body.service || '',\n    source: body.source || '',\n    device: body.device || '',\n    city: body.city || '',\n    country: body.country || '',\n    zip: body.zip || '',\n    area: body.area || '',\n    session: body.session || '',\n    scroll_pct: Number.isFinite(Number(body.scroll_pct)) ? Number(body.scroll_pct) : 0,\n    duration_ms: Number.isFinite(Number(body.duration_ms)) ? Number(body.duration_ms) : 0,\n    referrer: body.referrer || '',\n    utm_source: body.utm_source || '',\n    utm_medium: body.utm_medium || '',\n    utm_campaign: body.utm_campaign || '',\n    gclid: body.gclid || ''\n  };\n  try {\n    await env.DB.prepare(\n      `INSERT INTO lead_events (ts, day, hour, type, page, service, source, device, city, country, zip, area, session, scroll_pct, duration_ms, referrer, utm_source, utm_medium, utm_campaign, gclid)\n       VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)`\n    ).bind(\n      iso,\n      day,\n      hour,\n      record.type,\n      record.page,\n      record.service,\n      record.source,\n      record.device,\n      record.city,\n      record.country,\n      record.zip,\n      record.area,\n      record.session,\n      record.scroll_pct,\n      record.duration_ms,\n      record.referrer,\n      record.utm_source,\n      record.utm_medium,\n      record.utm_campaign,\n      record.gclid\n    ).run();\n    if (env.DB_2) {\n      await env.DB_2.prepare(\n        `INSERT INTO lead_events (ts, day, hour, type, page, service, source, device, city, country, zip, area, session, scroll_pct, duration_ms, referrer, utm_source, utm_medium, utm_campaign, gclid)\n         VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)`\n      ).bind(\n        iso,\n        day,\n        hour,\n        record.type,\n        record.page,\n        record.service,\n        record.source,\n        record.device,\n        record.city,\n        record.country,\n        record.zip,\n        record.area,\n        record.session,\n        record.scroll_pct,\n        record.duration_ms,\n        record.referrer,\n        record.utm_source,\n        record.utm_medium,\n        record.utm_campaign,\n        record.gclid\n      ).run();\n    }\n  } catch (e) {\n    console.error('D1 insert lead_events failed', e); // eslint-disable-line no-console\n    return json({ error: 'Database operation failed.' }, 500);\n  }\n  const measurement_id = 'G-CLK9PTRD5N';\n  const api_secret = env.GA4_API_SECRET || '';\n  const client_id = body.session || crypto.randomUUID();\n  const ga4Params: { [key: string]: any } = {\n    page_location: record.page || 'https://dependablepainting.work',\n    page_referrer: record.referrer || '',\n    session_id: record.session || '',\n    engagement_time_msec: record.duration_ms ? String(record.duration_ms) : undefined,\n    scroll_pct: record.scroll_pct,\n    city: record.city,\n    zip: record.zip,\n    area: record.area\n  };\n  Object.keys(ga4Params).forEach(k => ga4Params[k] === undefined && delete ga4Params[k]);\n  const ga4Payload = { client_id, events: [{ name: body.type || 'event', params: ga4Params }] };\n  try {\n    if (api_secret) {\n      const url = `https://www.google-analytics.com/mp/collect?measurement_id=${measurement_id}&api_secret=${api_secret}`;\n      const resp = await fetch(url, { method: 'POST', body: JSON.stringify(ga4Payload), headers: { 'Content-Type': 'application/json' } });\n      if (!resp.ok) {\n        const tx = await resp.text().catch(() => '');\n        return json({ error: `GA4 error: ${resp.status} ${tx.slice(0, 300)}` }, 502);\n      }\n    }\n  } catch (e) {}\n  return json({ ok: true });\n}\n\n// Not implemented placeholder JSON helper\nfunction notImpl() { return json({ success: false, message: 'Not implemented yet' }, 501); }\n\nasync function serveStaticAsset(env: any, request: Request) {\n  try {\n    if (env.ASSETS && typeof env.ASSETS.fetch === 'function') {\n      // Let the assets binding handle lookups and mime types first\n      const assetResp = await env.ASSETS.fetch(request);\n      if (assetResp.status !== 404) {\n        // Some setups may omit Content-Type on edge cases; normalize for safety\n        const url = new URL(request.url);\n        const path = url.pathname.toLowerCase();\n        const headers = new Headers(assetResp.headers);\n        if (!headers.has('content-type')) {\n          if (path.endsWith('.css')) headers.set('content-type', 'text/css; charset=utf-8');\n          else if (path.endsWith('.js')) headers.set('content-type', 'application/javascript; charset=utf-8');\n          else if (path.endsWith('.json')) headers.set('content-type', 'application/json; charset=utf-8');\n          else if (path.endsWith('.svg')) headers.set('content-type', 'image/svg+xml');\n          else if (path.endsWith('.ico')) headers.set('content-type', 'image/x-icon');\n          else if (path.endsWith('.png')) headers.set('content-type', 'image/png');\n          else if (path.endsWith('.jpg') || path.endsWith('.jpeg')) headers.set('content-type', 'image/jpeg');\n          else if (path.endsWith('.webp')) headers.set('content-type', 'image/webp');\n          else if (path.endsWith('.html') || path.endsWith('.htm')) headers.set('content-type', 'text/html; charset=utf-8');\n        }\n        // Modest default caching for static files\n        if (!headers.has('cache-control')) {\n          if (/\\.(?:css|js|png|jpg|jpeg|webp|svg|ico|woff2?)$/i.test(path)) {\n            headers.set('cache-control', 'public, max-age=31536000, immutable');\n          } else {\n            headers.set('cache-control', 'public, max-age=0, must-revalidate');\n          }\n        }\n        return new Response(assetResp.body, { status: assetResp.status, headers });\n      }\n    }\n  } catch (e) {\n    console.warn('Asset fetch error', e as any); // eslint-disable-line no-console\n  }\n  return new Response('Not Found', { status: 404, headers: { 'Cache-Control': 'no-store' } });\n}\n\nexport default {\n  async fetch(request: Request, env: any, ctx: any) { // eslint-disable-line @typescript-eslint/no-unused-vars\n    const { pathname } = new URL(request.url);\n    const method = request.method.toUpperCase();\n\n    // API routing\n  if (pathname === '/api/estimate' && method === 'POST') return handleContact(env, request); // new advanced contact\n  if (pathname === '/api/contact' && method === 'POST') return handleContact(env, request);\n  if (pathname === '/api/form' && method === 'POST') return handleForm(env, request);\n  if (pathname === '/api/call' && method === 'POST') return handleCall(env, request);\n  if (pathname === '/api/stats' && method === 'GET') return handleStats(env);\n  if (pathname === '/api/chat/history' && method === 'GET') return handleChatHistory(env, request);\n  if (pathname === '/api/event' && method === 'POST') return handleTrack(env, request); // alias\n    if (pathname.startsWith('/api/lead/') && method === 'GET') {\n      // /api/lead/:id\n      const id = pathname.split('/').pop();\n      if (!id) return json({ error: 'id required' }, 400);\n      try {\n        const row = await env.DB.prepare(\n          `SELECT id, name, email, phone, city, zip, service, page, source, session, message FROM leads WHERE id = ?`\n        ).bind(id).first();\n        if (!row) return json({ ok: false, error: 'not found' }, 404);\n        return json({ ok: true, lead: row });\n      } catch (e) {\n        return json({ error: 'db error' }, 500);\n      }\n    }\n    if (pathname === '/api/leads' && method === 'GET') {\n      const url = new URL(request.url);\n      const q = url.searchParams.get('q');\n      const source = url.searchParams.get('source');\n      const city = url.searchParams.get('city');\n      const limit = Math.min(parseInt(url.searchParams.get('limit') || '50', 10) || 50, 200);\n      const offset = parseInt(url.searchParams.get('offset') || '0', 10) || 0;\n      const filters = [];\n      const args = [];\n      if (source) { filters.push('source = ?'); args.push(source); }\n      if (city) { filters.push('city = ?'); args.push(city); }\n      if (q) { filters.push('(name LIKE ? OR email LIKE ? OR phone LIKE ?)'); args.push(`%${q}%`, `%${q}%`, `%${q}%`); }\n      const where = filters.length ? `WHERE ${filters.join(' AND ')}` : '';\n      try {\n        const { results } = await env.DB.prepare(\n          `SELECT id, name, email, phone, city, zip, service, page, source, session, message\n           FROM leads ${where} ORDER BY id DESC LIMIT ? OFFSET ?`\n        ).bind(...args, limit, offset).all();\n        return json({ ok: true, items: results });\n      } catch (e) {\n        return json({ error: 'db error' }, 500);\n      }\n    }\n  if (pathname === '/api/chat' && method === 'POST') return advancedChat(env, request);\n  if (pathname === '/api/charge' && method === 'POST') return notImpl();\n  if (pathname === '/api/track' && method === 'POST') return handleTrack(env, request);\n  if (pathname === '/api/track/advanced' && method === 'POST') return handleAdvancedTrack(env, request);\n    if (pathname === '/api/lead-status' && method === 'POST') return notImpl();\n    if (pathname === '/api/job' && method === 'POST') return notImpl();\n  // legacy placeholders replaced above for stats & call\n    if (pathname === '/api/geo/classify' && method === 'GET') return notImpl();\n    if (pathname === '/api/health' && method === 'GET') return json({ ok: true, ts: Date.now() });\n\n    // Static asset fallback (Wrangler will handle real asset serving via \"assets\" config). 404 placeholder here.\n  return serveStaticAsset(env, request);\n  },\n  async queue(batch: any, env: any, ctx: any) { // eslint-disable-line @typescript-eslint/no-unused-vars\n    // batch.queue contains the queue name\n    const qName = batch.queue;\n    for (const msg of batch.messages) {\n      try {\n        const data = msg.body;\n        switch (qName) {\n          case 'painter-chat-log-interaction': {\n            // Persist chat interaction if not already stored\n            if (data && data.session && data.question && data.answer) {\n              try {\n                await env.DB.prepare(\n                  \"INSERT INTO chat_log (ts, session, question, answer, ai_provider, user_agent, page) VALUES (datetime('now'),?,?,?,?,?,?)\"\n                ).bind(\n                  data.session,\n                  data.question,\n                  data.answer,\n                  data.provider || '',\n                  data.ua || '',\n                  data.page || ''\n                ).run();\n              } catch (_) {}\n            }\n            break;\n          }\n          case 'painter-lead': {\n            // Minimal lead ingestion (assumes message shaped like leadData)\n            if (data && data.name && (data.phone || data.email) && data.service) {\n              try {\n                await env.DB.prepare(\n                  `INSERT INTO leads (name, email, phone, city, zip, service, page, session, source, message)\n                   VALUES (?,?,?,?,?,?,?,?,?,?)`\n                ).bind(\n                  data.name,\n                  data.email || '',\n                  data.phone || '',\n                  data.city || '',\n                  data.zip || '',\n                  data.service || '',\n                  data.page || '',\n                  data.session || '',\n                  data.source || 'queue',\n                  data.message || ''\n                ).run();\n              } catch (e) {\n                // Retry transient DB errors\n                msg.retry();\n              }\n            }\n            break;\n          }\n          case 'painter-analytics-forward-ga4': {\n            // Forward lightweight event to GA4\n            try {\n              const measurement_id = 'G-CLK9PTRD5N';\n              const api_secret = env.GA4_API_SECRET || '';\n              if (api_secret) {\n                const client_id = data?.session || data?.client_id || crypto.randomUUID();\n                const ga4Payload = {\n                  client_id,\n                  events: [\n                    { name: (data?.type || 'event').toString().slice(0,40), params: {\n                      page_location: data?.page || 'https://dependablepainting.work',\n                      session_id: data?.session || '',\n                      city: data?.city || '',\n                      source: data?.source || '',\n                      service: data?.service || ''\n                    }}\n                  ]\n                };\n                const url = `https://www.google-analytics.com/mp/collect?measurement_id=${measurement_id}&api_secret=${api_secret}`;\n                const resp = await fetch(url, { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(ga4Payload) });\n                if (!resp.ok) {\n                  // retry on server errors\n                  if (resp.status >= 500) msg.retry();\n                }\n              }\n            } catch (_) {\n              msg.retry();\n            }\n            break;\n          }\n          case 'painter-lead-notify-customer': {\n            // Send notification email (best effort)\n            try {\n              if (env.SEB && env.SEB.send && data?.email) {\n                const fromAddr = env.FROM_ADDR || 'no-reply@dependablepainting.work';\n                const subject = data.subject || `Thanks for contacting ${env.SITE_NAME || 'Dependable Painting'}`;\n                const html = data.html || `<p>Hi ${data.name || 'there'},</p><p>We received your request and will be in touch shortly. Need us now? Call <strong>(251) 423-5855</strong>.</p>`;\n                try {\n                  // @ts-ignore\n                  if (typeof EmailMessage !== 'undefined') {\n                    // @ts-ignore\n                    const msgObj = new EmailMessage(fromAddr, data.email, subject);\n                    // @ts-ignore\n                    msgObj.setBody('text/html', html);\n                    await env.SEB.send(msgObj);\n                  } else {\n                    await env.SEB.send({ from: fromAddr, to: data.email, subject, html });\n                  }\n                } catch (inner) {\n                  msg.retry();\n                }\n              }\n            } catch (_) { /* swallow */ }\n            break;\n          }\n          default:\n            break;\n        }\n      } catch (err) {\n        try { msg.retry(); } catch (_) {}\n      }\n    }\n  }\n};\n\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/Users/alexdimmler/Website/painter-tools/src/index.ts\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/Users/alexdimmler/Library/pnpm/global/5/.pnpm/wrangler@4.40.1/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/Users/alexdimmler/Library/pnpm/global/5/.pnpm/wrangler@4.40.1/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/Users/alexdimmler/Website/painter-tools/src/index.ts\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/Users/alexdimmler/Website/painter-tools/.wrangler/tmp/bundle-9y7NPi/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/Users/alexdimmler/Library/pnpm/global/5/.pnpm/wrangler@4.40.1/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/Users/alexdimmler/Website/painter-tools/.wrangler/tmp/bundle-9y7NPi/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/Users/alexdimmler/Website/painter-tools/.wrangler/tmp/bundle-9y7NPi/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": ";;;;;AAuBO,SAAS,0BAA0B,MAAM;AAC/C,SAAO,IAAI,MAAM,WAAW,IAAI,0BAA0B;AAC3D;AAFgB;AAAA;AAIT,SAAS,eAAe,MAAM;AACpC,QAAM,KAAK,6BAAM;AAChB,UAAM,0CAA0B,IAAI;AAAA,EACrC,GAFW;AAGX,SAAO,OAAO,OAAO,IAAI,EAAE,WAAW,KAAK,CAAC;AAC7C;AALgB;;AAcT,SAAS,oBAAoB,MAAM;AACzC,SAAO,MAAM;AAAA,IACZ,YAAY;AAAA,IACZ,cAAc;AACb,YAAM,IAAI,MAAM,WAAW,IAAI,0BAA0B;AAAA,IAC1D;AAAA,EACD;AACD;AAPgB;;;ACxChB,IAAM,cAAc,WAAW,aAAa,cAAc,KAAK,IAAI;AACnE,IAAM,kBAAkB,WAAW,aAAa,MAAM,WAAW,YAAY,IAAI,KAAK,WAAW,WAAW,IAAI,MAAM,KAAK,IAAI,IAAI;AACnI,IAAM,aAAa;AAAA,EAClB,MAAM;AAAA,EACN,WAAW;AAAA,EACX,WAAW;AAAA,EACX,UAAU;AAAA,EACV,WAAW;AAAA,EACX,SAAS;AAAA,EACT,mBAAmB;AAAA,EACnB,aAAa;AAAA,EACb,WAAW;AAAA,EACX,UAAU;AAAA,EACV,UAAU;AAAA,EACV,eAAe;AAAA,IACd,WAAW;AAAA,IACX,QAAQ;AAAA,IACR,eAAe;AAAA,EAChB;AAAA,EACA,QAAQ;AAAA,EACR,SAAS;AACR,WAAO;AAAA,EACR;AACD;AAEO,IAAM,mBAAN,MAAuB;AAAA,EA1B9B,OA0B8B;AAAA;AAAA;AAAA,EAC7B,YAAY;AAAA,EACZ;AAAA,EACA,YAAY;AAAA,EACZ;AAAA,EACA;AAAA,EACA,YAAY,MAAM,SAAS;AAC1B,SAAK,OAAO;AACZ,SAAK,YAAY,SAAS,aAAa,gBAAgB;AACvD,SAAK,SAAS,SAAS;AAAA,EACxB;AAAA,EACA,IAAI,WAAW;AACd,WAAO,gBAAgB,IAAI,KAAK;AAAA,EACjC;AAAA,EACA,SAAS;AACR,WAAO;AAAA,MACN,MAAM,KAAK;AAAA,MACX,WAAW,KAAK;AAAA,MAChB,WAAW,KAAK;AAAA,MAChB,UAAU,KAAK;AAAA,MACf,QAAQ,KAAK;AAAA,IACd;AAAA,EACD;AACD;AAEO,IAAM,kBAAkB,MAAMA,yBAAwB,iBAAiB;AAAA,EAnD9E,OAmD8E;AAAA;AAAA;AAAA,EAC7E,YAAY;AAAA,EACZ,cAAc;AAEb,UAAM,GAAG,SAAS;AAAA,EACnB;AAAA,EACA,IAAI,WAAW;AACd,WAAO;AAAA,EACR;AACD;AAEO,IAAM,qBAAN,cAAiC,iBAAiB;AAAA,EA9DzD,OA8DyD;AAAA;AAAA;AAAA,EACxD,YAAY;AACb;AAEO,IAAM,4BAAN,cAAwC,iBAAiB;AAAA,EAlEhE,OAkEgE;AAAA;AAAA;AAAA,EAC/D,YAAY;AAAA,EACZ,eAAe,CAAC;AAAA,EAChB,aAAa;AAAA,EACb,eAAe;AAAA,EACf,kBAAkB;AAAA,EAClB,kBAAkB;AAAA,EAClB,oBAAoB;AAAA,EACpB,kBAAkB;AAAA,EAClB,aAAa;AAAA,EACb,gBAAgB;AAAA,EAChB,OAAO;AAAA,EACP,kBAAkB;AAAA,EAClB,cAAc;AAAA,EACd,gBAAgB;AAAA,EAChB,eAAe;AAAA,EACf,cAAc;AAAA,EACd,gBAAgB;AAAA,EAChB,wBAAwB;AAAA,EACxB,YAAY;AAAA,EACZ,eAAe;AAAA,EACf,cAAc;AAAA,EACd,iBAAiB;AAClB;AAEO,IAAM,+BAAN,MAAmC;AAAA,EA3F1C,OA2F0C;AAAA;AAAA;AAAA,EACzC,YAAY;AAAA,EACZ,aAAa;AACZ,WAAO,CAAC;AAAA,EACT;AAAA,EACA,iBAAiB,OAAO,OAAO;AAC9B,WAAO,CAAC;AAAA,EACT;AAAA,EACA,iBAAiB,MAAM;AACtB,WAAO,CAAC;AAAA,EACT;AACD;AAEO,IAAM,cAAN,MAAkB;AAAA,EAxGzB,OAwGyB;AAAA;AAAA;AAAA,EACxB,YAAY;AAAA,EACZ,aAAa;AAAA,EACb,cAAc,oBAAI,IAAI;AAAA,EACtB,WAAW,CAAC;AAAA,EACZ,4BAA4B;AAAA,EAC5B,aAAa;AAAA,EACb,SAAS;AAAA,EACT,SAAS,KAAK,UAAU;AACvB,UAAM,0BAA0B,sBAAsB;AAAA,EACvD;AAAA,EACA,IAAI,aAAa;AAChB,WAAO;AAAA,EACR;AAAA,EACA,uBAAuB;AACtB,WAAO,CAAC;AAAA,EACT;AAAA,EACA,qBAAqB;AAIpB,WAAO,IAAI,0BAA0B,EAAE;AAAA,EACxC;AAAA,EACA,6BAA6B;AAAA,EAC7B,MAAM;AAEL,QAAI,KAAK,eAAe,aAAa;AACpC,aAAO,gBAAgB;AAAA,IACxB;AACA,WAAO,KAAK,IAAI,IAAI,KAAK;AAAA,EAC1B;AAAA,EACA,WAAW,UAAU;AACpB,SAAK,WAAW,WAAW,KAAK,SAAS,OAAO,CAAC,MAAM,EAAE,SAAS,QAAQ,IAAI,KAAK,SAAS,OAAO,CAAC,MAAM,EAAE,cAAc,MAAM;AAAA,EACjI;AAAA,EACA,cAAc,aAAa;AAC1B,SAAK,WAAW,cAAc,KAAK,SAAS,OAAO,CAAC,MAAM,EAAE,SAAS,WAAW,IAAI,KAAK,SAAS,OAAO,CAAC,MAAM,EAAE,cAAc,SAAS;AAAA,EAC1I;AAAA,EACA,uBAAuB;AACtB,SAAK,WAAW,KAAK,SAAS,OAAO,CAAC,MAAM,EAAE,cAAc,cAAc,EAAE,cAAc,YAAY;AAAA,EACvG;AAAA,EACA,aAAa;AACZ,WAAO,KAAK;AAAA,EACb;AAAA,EACA,iBAAiB,MAAM,MAAM;AAC5B,WAAO,KAAK,SAAS,OAAO,CAAC,MAAM,EAAE,SAAS,SAAS,CAAC,QAAQ,EAAE,cAAc,KAAK;AAAA,EACtF;AAAA,EACA,iBAAiB,MAAM;AACtB,WAAO,KAAK,SAAS,OAAO,CAAC,MAAM,EAAE,cAAc,IAAI;AAAA,EACxD;AAAA,EACA,KAAK,MAAM,SAAS;AAEnB,UAAM,QAAQ,IAAI,gBAAgB,MAAM,OAAO;AAC/C,SAAK,SAAS,KAAK,KAAK;AACxB,WAAO;AAAA,EACR;AAAA,EACA,QAAQ,aAAa,uBAAuB,SAAS;AACpD,QAAI;AACJ,QAAI;AACJ,QAAI,OAAO,0BAA0B,UAAU;AAC9C,cAAQ,KAAK,iBAAiB,uBAAuB,MAAM,EAAE,CAAC,GAAG;AACjE,YAAM,KAAK,iBAAiB,SAAS,MAAM,EAAE,CAAC,GAAG;AAAA,IAClD,OAAO;AACN,cAAQ,OAAO,WAAW,uBAAuB,KAAK,KAAK,KAAK,IAAI;AACpE,YAAM,OAAO,WAAW,uBAAuB,GAAG,KAAK,KAAK,IAAI;AAAA,IACjE;AACA,UAAM,QAAQ,IAAI,mBAAmB,aAAa;AAAA,MACjD,WAAW;AAAA,MACX,QAAQ;AAAA,QACP;AAAA,QACA;AAAA,MACD;AAAA,IACD,CAAC;AACD,SAAK,SAAS,KAAK,KAAK;AACxB,WAAO;AAAA,EACR;AAAA,EACA,4BAA4B,SAAS;AACpC,SAAK,4BAA4B;AAAA,EAClC;AAAA,EACA,iBAAiB,MAAM,UAAU,SAAS;AACzC,UAAM,0BAA0B,8BAA8B;AAAA,EAC/D;AAAA,EACA,oBAAoB,MAAM,UAAU,SAAS;AAC5C,UAAM,0BAA0B,iCAAiC;AAAA,EAClE;AAAA,EACA,cAAc,OAAO;AACpB,UAAM,0BAA0B,2BAA2B;AAAA,EAC5D;AAAA,EACA,SAAS;AACR,WAAO;AAAA,EACR;AACD;AAEO,IAAM,sBAAN,MAA0B;AAAA,EApMjC,OAoMiC;AAAA;AAAA;AAAA,EAChC,YAAY;AAAA,EACZ,OAAO,sBAAsB,CAAC;AAAA,EAC9B,YAAY;AAAA,EACZ,YAAY,UAAU;AACrB,SAAK,YAAY;AAAA,EAClB;AAAA,EACA,cAAc;AACb,WAAO,CAAC;AAAA,EACT;AAAA,EACA,aAAa;AACZ,UAAM,0BAA0B,gCAAgC;AAAA,EACjE;AAAA,EACA,QAAQ,SAAS;AAChB,UAAM,0BAA0B,6BAA6B;AAAA,EAC9D;AAAA,EACA,KAAK,IAAI;AACR,WAAO;AAAA,EACR;AAAA,EACA,gBAAgB,IAAI,YAAY,MAAM;AACrC,WAAO,GAAG,KAAK,SAAS,GAAG,IAAI;AAAA,EAChC;AAAA,EACA,UAAU;AACT,WAAO;AAAA,EACR;AAAA,EACA,iBAAiB;AAChB,WAAO;AAAA,EACR;AAAA,EACA,cAAc;AACb,WAAO;AAAA,EACR;AACD;AAIO,IAAM,cAAc,WAAW,eAAe,sBAAsB,WAAW,cAAc,WAAW,cAAc,IAAI,YAAY;;;AC7N7I,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,WAAW,mBAAmB;AAC9B,WAAW,kBAAkB;AAC7B,WAAW,qBAAqB;AAChC,WAAW,sBAAsB;AACjC,WAAW,+BAA+B;AAC1C,WAAW,4BAA4B;;;ACjBvC,SAAS,gBAAgB;;;ACAzB,IAAO,eAAQ,OAAO,OAAO,MAAM;AAAC,GAAG,EAAE,WAAW,KAAK,CAAC;;;ADG1D,IAAM,WAAW,WAAW;AAErB,IAAM,gBAAgB;AACtB,IAAM,UAAU,IAAI,SAAS;AAC7B,IAAM,UAAU,IAAI,SAAS;AAC7B,IAAM,MAAM,UAAU,OAAO;AAC7B,IAAM,OAAO,UAAU,QAAQ;AAC/B,IAAM,QAAQ,UAAU,SAAS;AACjC,IAAM,QAAQ,UAAU,SAAS;AACjC,IAAM,QAAQ,UAAU,SAAS;AACjC,IAAM,QAAQ,UAAU,SAAS;AACjC,IAAM,OAAO,UAAU,QAAQ;AAE/B,IAAM,aAAa,UAAU,cAA8B,+BAAe,oBAAoB;AAG9F,IAAM,QAAQ,UAAU,SAAS;AACjC,IAAM,QAAQ,UAAU,SAAS;AACjC,IAAM,aAAa,UAAU,cAAc;AAC3C,IAAM,MAAM,UAAU,OAAO;AAC7B,IAAM,SAAS,UAAU,UAAU;AACnC,IAAM,QAAQ,UAAU,SAAS;AACjC,IAAM,WAAW,UAAU,YAAY;AACvC,IAAM,iBAAiB,UAAU,kBAAkB;AACnD,IAAM,UAAU,UAAU,WAAW;AACrC,IAAM,aAAa,UAAU,cAAc;AAC3C,IAAM,OAAO,UAAU,QAAQ;AAC/B,IAAM,UAAU,UAAU,WAAW;AACrC,IAAM,UAAU,UAAU,WAAW;AACrC,IAAM,YAAY,UAAU,aAAa;AACzC,IAAM,UAAU,UAAU,WAA2B,oCAAoB,iBAAiB;AAC1F,IAAM,SAAyB,oBAAI,IAAI;AAKvC,IAAM,sBAAsB;AAC5B,IAAM,sBAAsB;;;AEtBnC,IAAM,iBAAiB,WAAW,SAAS;AACpC,IAAM;AAAA,EACX;AAAA,EACA,OAAAC;AAAA;AAAA,EAEA;AAAA,EACA,OAAAC;AAAA,EACA,YAAAC;AAAA;AAAA,EAEA,YAAAC;AAAA,EACA,OAAAC;AAAA,EACA,KAAAC;AAAA,EACA,QAAAC;AAAA,EACA,OAAAC;AAAA,EACA,OAAAC;AAAA,EACA,gBAAAC;AAAA,EACA,UAAAC;AAAA,EACA,MAAAC;AAAA,EACA,KAAAC;AAAA,EACA,SAAAC;AAAA,EACA,YAAAC;AAAA,EACA,OAAAC;AAAA,EACA,MAAAC;AAAA,EACA,SAAAC;AAAA,EACA,SAAAC;AAAA,EACA,WAAAC;AAAA,EACA,OAAAC;AAAA,EACA,MAAAC;AACF,IAAI;AACJ,OAAO,OAAO,gBAAgB;AAAA,EAC5B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,CAAC;AACD,IAAO,kBAAQ;;;ACvDf,WAAW,UAAU;;;ACAd,IAAM,SAAyB,uBAAO,OAAO,gCAASC,QAAO,WAAW;AAC9E,QAAM,MAAM,KAAK,IAAI;AAErB,QAAM,UAAU,KAAK,MAAM,MAAM,GAAG;AAEpC,QAAM,QAAQ,MAAM,MAAM;AAC1B,MAAI,WAAW;AACd,QAAI,cAAc,UAAU,UAAU,CAAC;AACvC,QAAI,YAAY,QAAQ,UAAU,CAAC;AACnC,QAAI,YAAY,GAAG;AAClB,oBAAc,cAAc;AAC5B,kBAAY,MAAM;AAAA,IACnB;AACA,WAAO,CAAC,aAAa,SAAS;AAAA,EAC/B;AACA,SAAO,CAAC,SAAS,KAAK;AACvB,GAhBoD,WAgBjD,EAAE,QAAQ,gCAAS,SAAS;AAE9B,SAAO,OAAO,KAAK,IAAI,IAAI,GAAG;AAC/B,GAHa,UAGX,CAAC;;;ACpBH,SAAS,oBAAoB;;;ACAtB,IAAM,aAAN,MAAiB;AAAA,EAAxB,OAAwB;AAAA;AAAA;AAAA,EACvB;AAAA,EACA,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,YAAY,IAAI;AACf,SAAK,KAAK;AAAA,EACX;AAAA,EACA,WAAW,MAAM;AAChB,SAAK,QAAQ;AACb,WAAO;AAAA,EACR;AACD;;;ACXO,IAAM,cAAN,MAAkB;AAAA,EAAzB,OAAyB;AAAA;AAAA;AAAA,EACxB;AAAA,EACA,UAAU;AAAA,EACV,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,YAAY,IAAI;AACf,SAAK,KAAK;AAAA,EACX;AAAA,EACA,UAAUC,MAAK,UAAU;AACxB,gBAAY,SAAS;AACrB,WAAO;AAAA,EACR;AAAA,EACA,gBAAgB,UAAU;AACzB,gBAAY,SAAS;AACrB,WAAO;AAAA,EACR;AAAA,EACA,SAAS,GAAG,GAAG,UAAU;AACxB,gBAAY,OAAO,aAAa,cAAc,SAAS;AACvD,WAAO;AAAA,EACR;AAAA,EACA,WAAW,IAAI,IAAI,UAAU;AAC5B,gBAAY,SAAS;AACrB,WAAO;AAAA,EACR;AAAA,EACA,cAAcC,MAAK;AAClB,WAAO;AAAA,EACR;AAAA,EACA,UAAUC,QAAOD,MAAK;AACrB,WAAO;AAAA,EACR;AAAA,EACA,gBAAgB;AACf,WAAO,CAAC,KAAK,SAAS,KAAK,IAAI;AAAA,EAChC;AAAA,EACA,MAAM,KAAK,UAAU,IAAI;AACxB,QAAI,eAAe,YAAY;AAC9B,YAAM,IAAI,YAAY,EAAE,OAAO,GAAG;AAAA,IACnC;AACA,QAAI;AACH,cAAQ,IAAI,GAAG;AAAA,IAChB,QAAQ;AAAA,IAAC;AACT,UAAM,OAAO,OAAO,cAAc,GAAG;AACrC,WAAO;AAAA,EACR;AACD;;;AC1CO,IAAM,eAAe;;;AHIrB,IAAM,UAAN,MAAM,iBAAgB,aAAa;AAAA,EAL1C,OAK0C;AAAA;AAAA;AAAA,EACzC;AAAA,EACA;AAAA,EACA;AAAA,EACA,YAAY,MAAM;AACjB,UAAM;AACN,SAAK,MAAM,KAAK;AAChB,SAAK,SAAS,KAAK;AACnB,SAAK,WAAW,KAAK;AACrB,eAAW,QAAQ,CAAC,GAAG,OAAO,oBAAoB,SAAQ,SAAS,GAAG,GAAG,OAAO,oBAAoB,aAAa,SAAS,CAAC,GAAG;AAC7H,YAAM,QAAQ,KAAK,IAAI;AACvB,UAAI,OAAO,UAAU,YAAY;AAChC,aAAK,IAAI,IAAI,MAAM,KAAK,IAAI;AAAA,MAC7B;AAAA,IACD;AAAA,EACD;AAAA;AAAA,EAEA,YAAY,SAAS,MAAM,MAAM;AAChC,YAAQ,KAAK,GAAG,OAAO,IAAI,IAAI,OAAO,EAAE,GAAG,OAAO,GAAG,IAAI,OAAO,EAAE,GAAG,OAAO,EAAE;AAAA,EAC/E;AAAA,EACA,QAAQ,MAAM;AAEb,WAAO,MAAM,KAAK,GAAG,IAAI;AAAA,EAC1B;AAAA,EACA,UAAU,WAAW;AACpB,WAAO,MAAM,UAAU,SAAS;AAAA,EACjC;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA,IAAI,QAAQ;AACX,WAAO,KAAK,WAAW,IAAI,WAAW,CAAC;AAAA,EACxC;AAAA,EACA,IAAI,SAAS;AACZ,WAAO,KAAK,YAAY,IAAI,YAAY,CAAC;AAAA,EAC1C;AAAA,EACA,IAAI,SAAS;AACZ,WAAO,KAAK,YAAY,IAAI,YAAY,CAAC;AAAA,EAC1C;AAAA;AAAA,EAEA,OAAO;AAAA,EACP,MAAME,MAAK;AACV,SAAK,OAAOA;AAAA,EACb;AAAA,EACA,MAAM;AACL,WAAO,KAAK;AAAA,EACb;AAAA;AAAA,EAEA,OAAO;AAAA,EACP,WAAW;AAAA,EACX,OAAO,CAAC;AAAA,EACR,QAAQ;AAAA,EACR,WAAW,CAAC;AAAA,EACZ,WAAW;AAAA,EACX,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,OAAO;AAAA,EACP,IAAI,UAAU;AACb,WAAO,IAAI,YAAY;AAAA,EACxB;AAAA,EACA,IAAI,WAAW;AACd,WAAO,EAAE,MAAM,aAAa;AAAA,EAC7B;AAAA,EACA,IAAI,8BAA8B;AACjC,WAAO,oBAAI,IAAI;AAAA,EAChB;AAAA,EACA,IAAI,oBAAoB;AACvB,WAAO;AAAA,EACR;AAAA,EACA,IAAI,YAAY;AACf,WAAO;AAAA,EACR;AAAA,EACA,IAAI,mBAAmB;AACtB,WAAO;AAAA,EACR;AAAA,EACA,IAAI,mBAAmB;AACtB,WAAO;AAAA,EACR;AAAA,EACA,IAAI,WAAW;AACd,WAAO,CAAC;AAAA,EACT;AAAA,EACA,IAAI,UAAU;AACb,WAAO,CAAC;AAAA,EACT;AAAA,EACA,IAAI,YAAY;AACf,WAAO;AAAA,EACR;AAAA,EACA,IAAI,SAAS;AACZ,WAAO,CAAC;AAAA,EACT;AAAA,EACA,IAAI,iBAAiB;AACpB,WAAO,CAAC;AAAA,EACT;AAAA,EACA,oBAAoB;AACnB,WAAO;AAAA,EACR;AAAA,EACA,kBAAkB;AACjB,WAAO;AAAA,EACR;AAAA,EACA,SAAS;AACR,WAAO;AAAA,EACR;AAAA,EACA,gBAAgB;AACf,WAAO,CAAC;AAAA,EACT;AAAA;AAAA,EAEA,MAAM;AAAA,EAEN;AAAA,EACA,QAAQ;AAAA,EAER;AAAA;AAAA,EAEA,QAAQ;AACP,UAAM,0BAA0B,eAAe;AAAA,EAChD;AAAA,EACA,mBAAmB;AAClB,WAAO;AAAA,EACR;AAAA,EACA,yBAAyB;AACxB,UAAM,0BAA0B,gCAAgC;AAAA,EACjE;AAAA,EACA,OAAO;AACN,UAAM,0BAA0B,cAAc;AAAA,EAC/C;AAAA,EACA,aAAa;AACZ,UAAM,0BAA0B,oBAAoB;AAAA,EACrD;AAAA,EACA,OAAO;AACN,UAAM,0BAA0B,cAAc;AAAA,EAC/C;AAAA,EACA,QAAQ;AACP,UAAM,0BAA0B,eAAe;AAAA,EAChD;AAAA,EACA,SAAS;AACR,UAAM,0BAA0B,gBAAgB;AAAA,EACjD;AAAA,EACA,uBAAuB;AACtB,UAAM,0BAA0B,8BAA8B;AAAA,EAC/D;AAAA,EACA,cAAc;AACb,UAAM,0BAA0B,qBAAqB;AAAA,EACtD;AAAA,EACA,aAAa;AACZ,UAAM,0BAA0B,oBAAoB;AAAA,EACrD;AAAA,EACA,WAAW;AACV,UAAM,0BAA0B,kBAAkB;AAAA,EACnD;AAAA,EACA,sCAAsC;AACrC,UAAM,0BAA0B,6CAA6C;AAAA,EAC9E;AAAA,EACA,sCAAsC;AACrC,UAAM,0BAA0B,6CAA6C;AAAA,EAC9E;AAAA,EACA,aAAa;AACZ,UAAM,0BAA0B,oBAAoB;AAAA,EACrD;AAAA,EACA,YAAY;AACX,UAAM,0BAA0B,mBAAmB;AAAA,EACpD;AAAA,EACA,SAAS;AACR,UAAM,0BAA0B,gBAAgB;AAAA,EACjD;AAAA,EACA,UAAU;AACT,UAAM,0BAA0B,iBAAiB;AAAA,EAClD;AAAA;AAAA,EAEA,aAAa,EAAE,KAAqB,+BAAe,wBAAwB,EAAE;AAAA,EAC7E,SAAS;AAAA,IACR,WAAW;AAAA,IACX,UAAU;AAAA,IACV,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,oBAAoB;AAAA,IACpB,gBAAgB;AAAA,IAChB,2BAA2B;AAAA,IAC3B,WAA2B,+BAAe,0BAA0B;AAAA,IACpE,aAA6B,+BAAe,4BAA4B;AAAA,EACzE;AAAA,EACA,eAAe;AAAA,IACd,UAA0B,+BAAe,+BAA+B;AAAA,IACxE,YAA4B,+BAAe,iCAAiC;AAAA,IAC5E,oBAAoC,+BAAe,yCAAyC;AAAA,EAC7F;AAAA,EACA,cAAc,OAAO,OAAO,OAAO;AAAA,IAClC,cAAc;AAAA,IACd,KAAK;AAAA,IACL,UAAU;AAAA,IACV,WAAW;AAAA,IACX,UAAU;AAAA,EACX,IAAI,EAAE,KAAK,6BAAM,GAAN,OAAQ,CAAC;AAAA;AAAA,EAEpB,aAAa;AAAA,EACb,SAAS;AAAA;AAAA,EAET,OAAO;AAAA,EACP,WAAW;AAAA,EACX,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,SAAS;AAAA,EACT,YAAY;AAAA,EACZ,SAAS;AAAA,EACT,UAAU;AAAA,EACV,UAAU;AAAA,EACV,SAAS;AAAA,EACT,YAAY;AAAA,EACZ,SAAS;AAAA;AAAA,EAET,UAAU;AAAA,EACV,eAAe;AAAA,EACf,WAAW;AAAA,EACX,gBAAgB;AAAA,EAChB,YAAY;AAAA,EACZ,gBAAgB;AAAA,EAChB,kBAAkB;AAAA,EAClB,oBAAoB;AAAA,EACpB,qBAAqB;AAAA,EACrB,QAAQ;AAAA,EACR,mBAAmB;AAAA,EACnB,YAAY;AAAA,EACZ,6BAA6B;AAAA,EAC7B,4BAA4B;AAAA,EAC5B,gBAAgB;AAAA,EAChB,cAAc;AAAA,EACd,eAAe;AAAA,EACf,kBAAkB;AAAA,EAClB,WAAW;AAAA,EACX,QAAQ;AAAA,EACR,iBAAiB;AAClB;;;AI3OA,IAAM,gBAAgB,WAAW,SAAS;AACnC,IAAM,mBAAmB,cAAc;AAC9C,IAAM,iBAAiB,iBAAiB,cAAc;AACtD,IAAM,qBAAqB,WAAW,WAAW,mBAAmB;AACpE,IAAM,eAAe,IAAI,QAAa;AAAA,EACpC,KAAK,cAAc;AAAA;AAAA,EAEnB,QAAQ,qBAAqB,eAAe,SAAS;AAAA;AAAA,EAErD,UAAU,eAAe;AAC3B,CAAC;AACM,IAAM,EAAE,MAAM,UAAU,SAAS,IAAI;AACrC,IAAM;AAAA;AAAA,EAEX;AAAA;AAAA,EAEA,QAAAC;AAAA;AAAA,EAEA;AACF,IAAI;AACG,IAAM;AAAA,EACX;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,QAAAC;AAAA,EACA;AAAA,EACA;AACF,IAAI;AACG,IAAM;AAAA;AAAA,EAEX;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAEA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,IAAI,qBAAqB,iBAAiB;AAC1C,IAAM,WAAW;AAAA,EACfkBAAQ;;;AChQf,WAAW,UAAU;;;ACWrB,IAAM,oBAAoB;AAC1B,IAAM,mBAAmB;AACzB,IAAM,mBAAmB;AACzB,IAAM,gBAAgB;AACtB,IAAM,uBAAuB;AAE7B,SAAS,KAAK,MAAW,SAAS,KAAK;AACrC,SAAO,IAAI,SAAS,KAAK,UAAU,IAAI,GAAG,EAAE,QAAQ,SAAS,EAAE,gBAAgB,kCAAkC,EAAE,CAAC;AACtH;AAFS;AAIT,SAAS,UAAU;AAAE,SAAO,KAAK,OAAO,EAAE,SAAS,EAAE,EAAE,MAAM,GAAG,EAAE;AAAG;AAA5D;AAET,eAAe,UAAU,KAAc;AAAE,MAAI;AAAE,WAAO,MAAM,IAAI,KAAK;AAAA,EAAG,QAAQ;AAAE,WAAO;AAAA,EAAM;AAAE;AAAlF;AAEf,eAAe,UAAUC,MAAU,SAAiB,IAAmB;AACrE,MAAI,CAACA,KAAI,WAAY;AACrB,QAAM,MAAM,MAAM,WAAW,MAAM,MAAM;AACzC,QAAM,MAAM,MAAMA,KAAI,WAAW,IAAI,GAAG;AACxC,QAAMC,SAAQ,MAAM,SAAS,KAAK,EAAE,IAAI;AACxC,MAAIA,SAAQ,GAAI,OAAM,IAAI,MAAM,cAAc;AAC9C,QAAMD,KAAI,WAAW,IAAI,KAAK,OAAOC,SAAQ,CAAC,GAAG,EAAE,eAAe,IAAI,CAAC;AACzE;AAPe;AASf,eAAe,aAAaD,MAAU,SAAiB;AACrD,MAAI;AACF,UAAM,EAAE,QAAQ,IAAI,MAAMA,KAAI,GAAG;AAAA,MAC/B;AAAA,IACF,EAAE,KAAK,SAAS,iBAAiB,EAAE,IAAI;AACvC,YAAQ,WAAW,CAAC,GAAG,QAAQ;AAAA,EACjC,QAAQ;AACN,WAAO,CAAC;AAAA,EACV;AACF;AATe;AAWf,SAAS,qBAAqB,SAAgB;AAC5C,QAAM,OAA0D,CAAC;AACjE,aAAW,OAAO,SAAS;AACzB,QAAI,IAAI,SAAU,MAAK,KAAK,EAAE,MAAM,QAAQ,SAAS,IAAI,SAAS,CAAC;AACnE,QAAI,IAAI,OAAQ,MAAK,KAAK,EAAE,MAAM,aAAa,SAAS,IAAI,OAAO,CAAC;AAAA,EACtE;AACA,SAAO;AACT;AAPS;AAST,eAAe,aAAaA,MAAU,SAA4C;AAChF,MAAI,CAACA,KAAI,aAAa,CAACA,KAAI,GAAI,QAAO,CAAC;AACvC,MAAI;AACF,UAAM,gBAAqB,MAAMA,KAAI,GAAG,IAAI,8BAA8B,EAAE,MAAM,QAAQ,CAAC;AAC3F,UAAM,SAAmB,eAAe,OAAO,CAAC,GAAG,aAAa,eAAe,aAAa,CAAC;AAC7F,QAAI,CAAC,MAAM,QAAQ,MAAM,KAAK,CAAC,OAAO,OAAQ,QAAO,CAAC;AACtD,UAAM,YAAY,MAAMA,KAAI,UAAU,MAAM,QAAQ,EAAE,MAAM,kBAAkB,cAAc,KAAK,CAAC;AAClG,UAAM,QAA0B,UAAU,WAAW,CAAC,GAAG,IAAI,CAAC,GAAQ,OAAe;AAAA,MACnF,IAAI,EAAE,MAAM,OAAO,CAAC;AAAA,MACpB,OAAO,EAAE;AAAA,MACT,OAAO,EAAE,QAAQ,QAAQ,EAAE,UAAU,QAAQ,IAAI,SAAS,EAAE,MAAM,GAAG,IAAI;AAAA,IAC3E,EAAE,EAAE,OAAO,CAAC,MAAsB,EAAE,IAAI;AACxC,WAAO;AAAA,EACT,SAAS,GAAG;AACV,WAAO,CAAC;AAAA,EACV;AACF;AAhBe;AAkBf,SAAS,eAAe,MAAc;AACpC,QAAM,QAAQ,KAAK,YAAY;AAC/B,SAAO;AAAA,IACL,eAAe,4BAA4B,KAAK,KAAK;AAAA,IACrD,YAAY,sCAAsC,KAAK,KAAK;AAAA,IAC5D,UAAU,qDAAqD,KAAK,KAAK;AAAA,IACzE,UAAU,yBAAyB,KAAK,KAAK;AAAA,EAC/C;AACF;AARS;AAUT,SAAS,aAAaA,MAAU;AAC9B,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBT;AAjBS;AAmBT,SAAS,kBAAkB,MAAgC;AACzD,MAAI,CAAC,KAAK,OAAQ,QAAO;AACzB,SAAO,yBAAyB,KAAK,IAAI,CAAC,GAAG,MAAM,QAAQ,IAAE,CAAC,KAAK,EAAE,IAAI,EAAE,EAAE,KAAK,SAAS;AAC7F;AAHS;AAKT,eAAe,cAAcA,MAAU,UAAiB,aAAqB;AAC3E,QAAM,OAAO,MAAMA,KAAI,GAAG,IAAI;AAAA,IAC5B,OAAOA,KAAI,YAAY;AAAA,IACvB;AAAA,IACA,YAAY;AAAA,IACZ;AAAA,EACF,CAAC;AACD,SAAO,EAAE,MAAM,MAAM,UAAU,CAAC,GAAG,SAAS,WAAW,IAAI,UAAU,aAAa;AACpF;AARe;AAUf,eAAe,WAAWA,MAAU,UAAiB,aAAqB;AACxE,QAAM,SAASA,KAAI;AACnB,MAAI,CAAC,OAAQ,OAAM,IAAI,MAAM,gBAAgB;AAC7C,QAAM,OAAO,MAAM,MAAM,8CAA8C;AAAA,IACrE,QAAQ;AAAA,IACR,SAAS,EAAE,iBAAiB,UAAU,MAAM,IAAI,gBAAgB,mBAAmB;AAAA,IACnF,MAAM,KAAK,UAAU;AAAA,MACnB,OAAOA,KAAI,gBAAgB;AAAA,MAC3B;AAAA,MACA;AAAA,MACA,YAAY;AAAA,IACd,CAAC;AAAA,EACH,CAAC;AACD,MAAI,CAAC,KAAK,IAAI;AACZ,UAAM,KAAK,MAAM,KAAK,KAAK,EAAE,MAAM,MAAM,EAAE;AAC3C,UAAM,IAAI,MAAM,eAAe,KAAK,MAAM,IAAI,GAAG,MAAM,GAAE,GAAG,CAAC,EAAE;AAAA,EACjE;AACA,QAAM,OAAO,MAAM,KAAK,KAAK;AAC7B,SAAO,EAAE,MAAM,MAAM,UAAU,CAAC,GAAG,SAAS,WAAW,IAAI,UAAU,SAAS;AAChF;AAnBe;AAqBf,eAAe,QAAQA,MAAU,SAAiB,UAAkB,QAAgB,UAAkB,MAA0B,IAAmB;AACjJ,MAAI;AACF,UAAMA,KAAI,GAAG;AAAA,MACX;AAAA,IACF,EAAE,KAAK,SAAS,UAAU,QAAQ,UAAU,IAAI,QAAQ,EAAE,EAAE,IAAI;AAAA,EAClE,QAAQ;AAAA,EAAC;AACT,MAAI;AACF,QAAIA,KAAI,YAAY;AAClB,YAAMA,KAAI,WAAW,KAAK,EAAE,SAAS,UAAU,QAAQ,UAAU,MAAM,IAAI,KAAK,IAAI,EAAE,CAAC;AAAA,IACzF;AAAA,EACF,QAAQ;AAAA,EAAC;AACX;AAXe;AAaf,SAAS,UAAU,MAAc;AAC/B,QAAM,UAAU,IAAI,YAAY;AAChC,QAAM,YAAY,KAAK,MAAM,gBAAgB,KAAK,CAAC,IAAI;AACvD,MAAI,IAAI;AACR,SAAO,IAAI,eAAe;AAAA,IACxB,KAAK,YAAY;AACf,UAAI,KAAK,UAAU,QAAQ;AAAE,mBAAW,QAAQ,QAAQ,OAAO,8BAA8B,CAAC;AAAG,mBAAW,MAAM;AAAG;AAAA,MAAQ;AAC7H,YAAM,QAAQ,UAAU,GAAG,EAAE,KAAK;AAClC,UAAI,MAAO,YAAW,QAAQ,QAAQ,OAAO,SAAS,KAAK,UAAU,KAAK,CAAC;AAAA;AAAA,CAAM,CAAC;AAAA,IACpF;AAAA,EACF,CAAC;AACH;AAXS;AAaT,eAAsB,WAAWA,MAAU,SAAkB;AAC3D,MAAI,QAAQ,WAAW,OAAQ,QAAO,KAAK,EAAE,OAAO,qBAAqB,GAAG,GAAG;AAC/E,QAAM,OAAO,MAAM,UAAU,OAAO;AACpC,MAAI,CAAC,QAAQ,CAAC,KAAK,QAAS,QAAO,KAAK,EAAE,OAAO,mBAAmB,GAAG,GAAG;AAC1E,QAAM,WAAW,KAAK,WAAW,IAAI,MAAM,GAAE,EAAE,KAAK,QAAQ;AAC5D,QAAM,cAAc,OAAO,SAAS,KAAK,WAAW,IAAI,OAAO,KAAK,WAAW,IAAKA,KAAI,UAAU,OAAOA,KAAI,OAAO,IAAI;AACxH,QAAM,KAAK,QAAQ,QAAQ,IAAI,kBAAkB;AAEjD,MAAI;AAAE,UAAM,UAAUA,MAAK,SAAS,EAAE;AAAA,EAAG,QAAQ;AAAE,WAAO,KAAK,EAAE,OAAO,eAAe,GAAG,GAAG;AAAA,EAAG;AAEhG,QAAM,cAAc,MAAM,aAAaA,MAAK,OAAO;AACnD,QAAM,cAAc,qBAAqB,WAAW;AACpD,QAAM,OAAO,MAAM,aAAaA,MAAK,KAAK,OAAO;AACjD,QAAM,UAAU,eAAe,KAAK,OAAO;AAE3C,QAAM,eAAe,kBAAkB,IAAI;AAC3C,QAAM,oBAA8B,CAAC;AACrC,MAAI,QAAQ,cAAe,mBAAkB,KAAK,wIAAwI;AAC1L,MAAI,QAAQ,WAAY,mBAAkB,KAAK,yEAAyE;AACxH,MAAI,QAAQ,SAAU,mBAAkB,KAAK,+BAA+B;AAC5E,MAAI,QAAQ,SAAU,mBAAkB,KAAK,0DAA0D;AAEvG,QAAM,eAAe,kBAAkB,SAAU,wBAAwB,kBAAkB,KAAK,IAAI,IAAK;AAEzG,QAAM,SAAS,aAAaA,IAAG,KAAK,eAAe,SAAS,eAAe,OAAO,eAAe,SAAS,eAAe;AAEzH,QAAM,WAAW;AAAA,IACf,EAAE,MAAM,UAAU,SAAS,OAAO;AAAA,IAClC,GAAG;AAAA,IACH,EAAE,MAAM,QAAQ,SAAS,KAAK,QAAQ;AAAA,EACxC;AAEA,MAAI,SAAoD;AACxD,MAAIE,SAAuB;AAC3B,MAAI;AACF,QAAIF,KAAI,IAAI;AACV,eAAS,MAAM,cAAcA,MAAK,UAAU,WAAW;AAAA,IACzD,WAAWA,KAAI,gBAAgB;AAC7B,eAAS,MAAM,WAAWA,MAAK,UAAU,WAAW;AAAA,IACtD,OAAO;AACL,YAAM,IAAI,MAAM,gBAAgB;AAAA,IAClC;AAAA,EACF,SAAS,GAAQ;AACf,IAAAE,SAAQ,GAAG,WAAW,OAAO,CAAC;AAAA,EAChC;AACA,MAAI,CAAC,OAAQ,QAAO,KAAK,EAAE,OAAOA,UAAS,YAAY,GAAG,GAAG;AAE7D,UAAQF,MAAK,SAAS,KAAK,SAAS,OAAO,MAAM,OAAO,UAAU,KAAK,MAAM,QAAQ,QAAQ,IAAI,YAAY,CAAC;AAE9G,MAAI,KAAK,QAAQ;AACf,UAAM,SAAS,UAAU,OAAO,IAAI;AACpC,WAAO,IAAI,SAAS,QAAQ;AAAA,MAC1B,QAAQ;AAAA,MACR,SAAS;AAAA,QACP,gBAAgB;AAAA,QAChB,iBAAiB;AAAA,QACjB,aAAa;AAAA,MACf;AAAA,IACF,CAAC;AAAA,EACH;AAEA,SAAO,KAAK;AAAA,IACV,IAAI;AAAA,IACJ;AAAA,IACA,OAAO,OAAO;AAAA;AAAA,IAEd,QAAQ,OAAO;AAAA,IACf,UAAU,OAAO;AAAA,IACjB;AAAA,IACA,MAAM;AAAA,MACJ,eAAe,YAAY;AAAA,MAC3B,cAAc,KAAK;AAAA,IACrB;AAAA,EACF,CAAC;AACH;AA1EsB;;;ACpHtB,SAAS,EAAE,MAAW,SAAS,KAAK,UAAkC,CAAC,GAAG;AACxE,SAAO,IAAI,SAAS,KAAK,UAAU,IAAI,GAAG,EAAE,QAAQ,SAAS,EAAE,gBAAgB,mCAAmC,GAAG,QAAQ,EAAE,CAAC;AAClI;AAFS;AAIT,SAAS,WAAW,GAAQ,IAAI,GAAG;AAAE,QAAM,IAAI,OAAO,CAAC;AAAG,SAAO,OAAO,SAAS,CAAC,IAAI,IAAI;AAAG;AAApF;AAGT,SAAS,gBAAgB,GAA2E;AAClG,QAAM,OAAO,EAAE,UAAU,EAAE,cAAc,IAAI,YAAY;AACzD,QAAM,OAAO,EAAE,UAAU,EAAE,cAAc,IAAI,YAAY;AACzD,QAAMG,QAAO,EAAE,YAAY,IAAI,YAAY;AAC3C,MAAI,EAAE,MAAO,QAAO,EAAE,SAAS,eAAe,QAAQ,UAAU,QAAQ,MAAM;AAC9E,MAAI,mBAAmB,KAAK,GAAG,KAAK,mBAAmB,KAAKA,IAAG,EAAG,QAAO,EAAE,SAAS,eAAe,QAAQ,YAAY,QAAQ,OAAO,cAAc;AACpJ,MAAI,SAAS,KAAK,GAAG,KAAK,SAAS,KAAKA,IAAG,EAAG,QAAO,EAAE,SAAS,eAAe,QAAQ,UAAU,QAAQ,OAAO,cAAc;AAC9H,MAAI,SAAS,KAAK,GAAG,MAAM,QAAQ,aAAa,CAAC,KAAM,QAAO,EAAE,SAAS,kBAAkB,QAAQ,UAAU,QAAQ,UAAU;AAC/H,MAAI,wBAAwB,KAAKA,IAAG,EAAG,QAAO,EAAE,SAAS,kBAAkB,QAAQ,gBAAgB,QAAQ,UAAU;AACrH,MAAI,QAAQ,QAAS,QAAO,EAAE,SAAS,SAAS,QAAQ,OAAO,SAAS,QAAQ,QAAQ;AACxF,MAAI,QAAQ,YAAa,QAAO,EAAE,SAAS,aAAa,QAAQ,OAAO,aAAa,QAAQ,YAAY;AACxG,MAAI,QAAQ,SAAS,QAAQ,SAAS,QAAQ,cAAe,QAAO,EAAE,SAAS,eAAe,QAAQ,OAAO,QAAQ,QAAQ,MAAM;AACnI,MAAIA,QAAO,CAACA,KAAI,SAAS,yBAAyB,EAAG,QAAO,EAAE,SAAS,YAAY,QAAQ,IAAI,IAAI,aAAaA,KAAI,QAAQ,gBAAe,EAAE,CAAC,EAAE,SAAS,QAAQ,UAAS,EAAE,KAAK,YAAY,QAAQ,WAAW;AAChN,SAAO,EAAE,SAAS,UAAU,QAAQ,UAAU,QAAQ,SAAS;AACjE;AAdS;AAiBT,SAAS,MAAM,IAA4B;AACzC,MAAI,CAAC,GAAI,QAAO;AAChB,SAAO,qDAAqD,KAAK,EAAE,KAAK,CAAC,2BAA2B,KAAK,EAAE;AAC7G;AAHS;AAMT,SAAS,YAAY,MAAc,MAAsB;AACvD,QAAM,IAAI,KAAK,YAAY;AAC3B,MAAI,MAAM,aAAa;AACrB,QAAI,YAAY,KAAK,IAAI,EAAG,QAAO;AACnC,QAAI,yBAAyB,KAAK,IAAI,EAAG,QAAO;AAChD,WAAO;AAAA,EACT;AACA,MAAI,8BAA8B,KAAK,CAAC,EAAG,QAAO;AAClD,MAAI,oBAAoB,KAAK,CAAC,EAAG,QAAO;AACxC,SAAO;AACT;AAVS;AAYT,eAAe,YAAY,IAAS,KAAa,OAAe,YAAsC;AACpG,MAAI;AACF,UAAM,YAAY,KAAK,MAAM,KAAK,IAAI,KAAK,aAAa,IAAK;AAC7D,UAAM,aAAa,MAAM,GAAG,IAAI,SAAS;AACzC,UAAM,UAAU,MAAM,GAAG,IAAI,UAAU;AACvC,QAAI,CAAC,SAAS;AACZ,YAAM,GAAG,IAAI,YAAY,KAAK,EAAE,eAAe,aAAa,EAAE,CAAC;AAC/D,aAAO;AAAA,IACT;AACA,UAAM,OAAO,SAAS,SAAS,EAAE,IAAI;AACrC,QAAI,OAAO,MAAO,QAAO;AACzB,UAAM,GAAG,IAAI,YAAY,OAAO,IAAI,GAAG,EAAE,eAAe,aAAa,EAAE,CAAC;AACxE,WAAO;AAAA,EACT,QAAQ;AAAE,WAAO;AAAA,EAAM;AACzB;AAde;AAgBf,eAAe,aAAaC,MAAkB,QAAa;AACzD,MAAI;AACF,UAAMA,KAAI,GAAG;AAAA,MACX;AAAA;AAAA,IAEF,EAAE;AAAA,MACA,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,IACT,EAAE,IAAI;AAAA,EACR,SAAS,GAAG;AACV,YAAQ,MAAM,mCAAmC,CAAC;AAAA,EACpD;AACF;AA9Be;AAgCf,SAAS,aAAa,QAAa;AACjC,QAAM,eAAe,YAAY,OAAO,MAAM,OAAO,IAAI;AACzD,SAAO,EAAE,aAAa;AACxB;AAHS;AAKT,eAAe,qBAAqBA,MAAkB,UAAe;AACnE,MAAI,CAACA,KAAI,iBAAkB;AAC3B,MAAI;AACF,UAAMA,KAAI,iBAAiB,eAAe;AAAA,MACxC,SAAS,CAAC,SAAS,SAAS,SAAS,cAAc,SAAS,IAAI;AAAA,MAChE,OAAO,CAAC,KAAK,UAAU,QAAQ,CAAC;AAAA,MAChC,SAAS,CAAC,SAAS,SAAS,CAAC;AAAA,IAC/B,CAAC;AAAA,EACH,SAAS,GAAG;AAAA,EAAe;AAC7B;AATe;AAWf,eAAe,aAAaA,MAAkB,UAAe;AAC3D,MAAI;AACF,QAAIA,KAAI,WAAW;AACjB,YAAMA,KAAI,UAAU,KAAK;AAAA,QACvB,MAAM,SAAS;AAAA,QACf,MAAM,SAAS;AAAA,QACf,SAAS,SAAS;AAAA,QAClB,MAAM,SAAS;AAAA,QACf,SAAS,SAAS;AAAA,QAClB,QAAQ,SAAS;AAAA,MACnB,CAAC;AAAA,IACH;AAAA,EACF,SAAS,GAAG;AAAA,EAAC;AACf;AAbe;AAef,eAAsB,oBAAoBA,MAAkB,SAAkB;AAC5E,QAAM,OAAiC,MAAM,QAAQ,KAAK,EAAE,MAAM,MAAM,IAAI;AAC5E,MAAI,CAAC,KAAM,QAAO,EAAE,EAAE,OAAO,eAAe,GAAG,GAAG;AAClD,QAAM,KAAK,QAAQ,QAAQ,IAAI,YAAY;AAC3C,MAAI,MAAM,EAAE,EAAG,QAAO,EAAE,EAAE,IAAI,MAAM,SAAS,MAAM,CAAC;AAEpD,QAAM,WAAW,KAAK,WAAW,OAAO,WAAW,GAAG,SAAS,EAAE,MAAM,GAAG,GAAG;AAG7E,QAAM,UAAU,MAAM,YAAYA,KAAI,YAAY,OAAO,OAAO,IAAI,KAAK,KAAK,CAAC;AAC/E,MAAI,CAAC,QAAS,QAAO,EAAE,EAAE,OAAO,eAAe,GAAG,GAAG;AAErD,QAAM,SAAS,KAAK,KAAK,IAAI,KAAK,KAAK,EAAE,IAAI,oBAAI,KAAK;AACtD,QAAM,MAAM,OAAO,YAAY;AAC/B,QAAM,SAAS;AAAA,IACb,IAAI;AAAA,IACJ,KAAK,IAAI,MAAM,GAAG,EAAE;AAAA,IACpB,MAAM,IAAI,MAAM,IAAI,EAAE;AAAA,IACtB,OAAO,KAAK,QAAQ,aAAa,SAAS,EAAE,MAAM,GAAG,EAAE;AAAA,IACvD,OAAO,KAAK,QAAQ,IAAI,SAAS,EAAE,MAAM,GAAG,GAAG;AAAA,IAC/C,UAAU,KAAK,WAAW,IAAI,SAAS,EAAE,MAAM,GAAG,GAAG;AAAA,IACrD,SAAS,KAAK,UAAU,KAAK,cAAc,IAAI,SAAS,EAAE,MAAM,GAAG,GAAG;AAAA,IACtE,SAAS,KAAK,UAAU,IAAI,SAAS,EAAE,MAAM,GAAG,EAAE;AAAA,IAClD,OAAO,KAAK,QAAQ,IAAI,SAAS,EAAE,MAAM,GAAG,GAAG;AAAA,IAC/C,UAAU,KAAK,WAAW,IAAI,SAAS,EAAE,MAAM,GAAG,GAAG;AAAA,IACrD,MAAM,KAAK,OAAO,IAAI,SAAS,EAAE,MAAM,GAAG,EAAE;AAAA,IAC5C,OAAO,KAAK,QAAQ,IAAI,SAAS,EAAE,MAAM,GAAG,EAAE;AAAA,IAC9C;AAAA,IACA,YAAY,WAAW,KAAK,UAAU;AAAA,IACtC,aAAa,WAAW,KAAK,WAAW;AAAA,IACxC,WAAW,KAAK,YAAY,IAAI,SAAS,EAAE,MAAM,GAAG,GAAG;AAAA,IACvD,aAAa,KAAK,cAAc,IAAI,SAAS,EAAE,MAAM,GAAG,GAAG;AAAA,IAC3D,aAAa,KAAK,cAAc,IAAI,SAAS,EAAE,MAAM,GAAG,GAAG;AAAA,IAC3D,eAAe,KAAK,gBAAgB,IAAI,SAAS,EAAE,MAAM,GAAG,GAAG;AAAA,IAC/D,QAAQ,KAAK,SAAS,IAAI,SAAS,EAAE,MAAM,GAAG,GAAG;AAAA,EACnD;AAGA,QAAM,cAAc,gBAAgB,IAAI;AACxC,QAAM,UAAU,aAAa,MAAM;AACnC,QAAM,QAAQ,WAAW,KAAK,OAAO,CAAC;AAEtC,QAAM,WAAW,EAAE,GAAG,QAAQ,GAAG,aAAa,GAAG,SAAS,OAAO,MAAM,KAAK,QAAQ,CAAC,GAAG,GAAG;AAE3F,QAAM,aAAaA,MAAK,MAAM;AAC9B,QAAM,qBAAqBA,MAAK,QAAQ;AACxC,QAAM,aAAaA,MAAK,QAAQ;AAGhC,SAAO,EAAE,EAAE,IAAI,MAAM,SAAS,YAAY,SAAS,cAAc,QAAQ,cAAc,MAAM,CAAC;AAChG;AAlDsB;;;ACzItB,SAASC,GAAE,MAAW,SAAS,KAAK,UAAiC,CAAC,GAAG;AACxE,SAAO,IAAI,SAAS,KAAK,UAAU,IAAI,GAAG,EAAE,QAAQ,SAAS,EAAE,gBAAgB,mCAAmC,GAAG,QAAQ,EAAE,CAAC;AACjI;AAFS,OAAAA,IAAA;AAIT,SAAS,eAAe,KAA0D;AACjF,MAAI,CAAC,IAAK,QAAO,EAAE,KAAK,IAAI,QAAQ,GAAG;AACvC,QAAM,SAAS,IAAI,QAAQ,QAAQ,EAAE,EAAE,MAAM,GAAG,EAAE;AAClD,SAAO,EAAE,KAAK,IAAI,KAAK,GAAG,OAAO;AAClC;AAJS;AAMT,SAAS,UAAU,KAAa,MAAyD;AACxF,MAAI,QAAQ;AACZ,QAAM,UAAoB,CAAC;AAC3B,QAAM,IAAI,IAAI,YAAY;AAC1B,MAAI,EAAE,SAAS,GAAG;AAAE,aAAS;AAAI,YAAQ,KAAK,YAAY;AAAA,EAAG;AAC7D,MAAI,cAAc,KAAK,CAAC,GAAG;AAAE,aAAS;AAAI,YAAQ,KAAK,cAAc;AAAA,EAAG;AACxE,OAAK,EAAE,MAAM,sCAAsC,KAAG,CAAC,GAAG,QAAQ;AAAE,aAAS;AAAI,YAAQ,KAAK,eAAe;AAAA,EAAG;AAChH,MAAI,KAAK,SAAS,uCAAuC,KAAK,KAAK,KAAK,GAAG;AAAE,aAAS;AAAI,YAAQ,KAAK,iBAAiB;AAAA,EAAG;AAC3H,SAAO,EAAE,OAAO,QAAQ;AACzB;AATS;AAWT,eAAe,cAAcC,MAAU,aAAqB,OAA2B,SAA6B,SAAmC;AAEtJ,MAAI;AACH,QAAI,CAAC,eAAe,CAAC,MAAO,QAAO;AACnC,UAAM,QAAkB,CAAC;AACzB,UAAM,OAAc,CAAC;AACrB,QAAI,aAAa;AAAE,YAAM,KAAK,cAAc;AAAG,WAAK,KAAK,MAAM,YAAY,MAAM,EAAE,CAAC;AAAA,IAAG;AACvF,QAAI,OAAO;AAAE,YAAM,KAAK,WAAW;AAAG,WAAK,KAAK,KAAK;AAAA,IAAG;AACxD,UAAM,SAAS,MAAM,SAAS,MAAM,MAAM,KAAK,MAAM,IAAI,MAAM;AAC/D,UAAM,IAAI,8BAA8B,MAAM;AAC9C,UAAM,MAAM,MAAMA,KAAI,GAAG,QAAQ,CAAC,EAAE,KAAK,GAAG,MAAM,WAAW,IAAI,OAAO,EAAE,MAAM;AAChF,WAAO,CAAC,CAAC;AAAA,EACV,SAAS,GAAG;AAAE,WAAO;AAAA,EAAO;AAC7B;AAbe;AAef,eAAe,WAAWA,MAAU,MAAW;AAC9C,QAAM,MAAM,MAAMA,KAAI,GAAG;AAAA,IACxB;AAAA;AAAA,EAED,EAAE;AAAA,IACD,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,EACN,EAAE,IAAI;AACN,SAAO,IAAI,MAAM,cAAc,OAAO,IAAI,KAAK,WAAW,IAAI;AAC/D;AAjBe;AAmBf,eAAe,YAAYA,MAAU,MAAW;AAC/C,MAAI;AACH,UAAM,MAAK,oBAAI,KAAK,GAAE,YAAY;AAClC,UAAMA,KAAI,GAAG;AAAA,MACZ;AAAA;AAAA,IAED,EAAE;AAAA,MACD;AAAA,MAAI;AAAA,MAAI;AAAA,MACR;AAAA,MACA,KAAK,QAAQ;AAAA,MACb,KAAK,WAAW;AAAA,MAChB,KAAK,UAAU;AAAA,MACf;AAAA;AAAA,MACA,KAAK,QAAQ;AAAA,MACb;AAAA;AAAA,MACA,KAAK,OAAO;AAAA,MACZ;AAAA;AAAA,MACA,KAAK,WAAW;AAAA,MAChB;AAAA,MAAG;AAAA,MACH,KAAK,YAAY;AAAA,MACjB,KAAK,cAAc;AAAA,MACnB,KAAK,cAAc;AAAA,MACnB,KAAK,gBAAgB;AAAA,MACrB,KAAK,SAAS;AAAA,IACf,EAAE,IAAI;AAAA,EACP,SAAS,GAAG;AAAA,EAAC;AACd;AA1Be;AA4Bf,eAAe,eAAeA,MAAU,MAAW,MAA4C;AAC9F,MAAI,CAACA,KAAI,OAAO,CAACA,KAAI,IAAI,KAAM;AAC/B,QAAM,UAAU,UAAU,KAAK,WAAW,SAAS,MAAM,KAAK,IAAI,MAAM,KAAK,SAAS,KAAK,SAAS,YAAY;AAChH,QAAM,QAAQ;AAAA,IACb;AAAA,IACA,SAAS,KAAK,IAAI;AAAA,IAClB,UAAU,KAAK,SAAS,QAAG;AAAA,IAC3B,UAAU,KAAK,SAAS,QAAG;AAAA,IAC3B,SAAS,KAAK,QAAQ,QAAG;AAAA,IACzB,QAAQ,KAAK,OAAO,QAAG;AAAA,IACvB,YAAY,KAAK,WAAW,QAAG;AAAA,IAC/B,WAAW,KAAK,UAAU,QAAG;AAAA,IAC7B,QAAQ,KAAK,cAAc,EAAE,MAAM,KAAK,cAAc,EAAE,MAAM,KAAK,gBAAgB,EAAE;AAAA,IACrF,YAAY,KAAK,WAAW,QAAG;AAAA,IAC/B,SAAS,KAAK,IAAI;AAAA,IAClB,aAAa,KAAK,YAAY,QAAG;AAAA,IACjC;AAAA,EAAa,KAAK,OAAO;AAAA,IACzB,eAAe,KAAK,KAAK,KAAK,KAAK,QAAQ,KAAK,GAAG,KAAK,OAAO;AAAA,EAChE;AACA,QAAM,OAAO,MAAM,KAAK,IAAI;AAC5B,QAAM,OAAOA,KAAI,aAAaA,KAAI,UAAU;AAE5C,QAAM,UAAUA,KAAI,eAAeA,KAAI,eAAeA,KAAI,eAAeA,KAAI,WAAWA,KAAI;AAC5F,QAAM,UAAU,WAAW,yCAAyC,MAAM,SAAS,EAAE,OAAO,OAAO;AACnG,aAAW,MAAM,QAAQ;AACxB,QAAI;AAEH,UAAI,OAAO,iBAAiB,aAAa;AAExC,cAAM,MAAM,IAAI,aAAa,MAAM,IAAI,OAAO;AAE9C,YAAI,QAAQ,cAAc,IAAI;AAC9B,cAAMA,KAAI,IAAI,KAAK,GAAG;AAAA,MACvB,OAAO;AACN,cAAMA,KAAI,IAAI,KAAK,EAAE,MAAM,IAAI,SAAS,SAAS,KAAK,CAAC;AAAA,MACxD;AAAA,IACD,SAAS,GAAG;AAAA,IAA8B;AAAA,EAC3C;AACD;AAtCe;AAwCf,eAAe,uBAAuBA,MAAU,MAAW;AAC1D,MAAI,CAAC,KAAK,MAAO;AACjB,MAAI;AACH,QAAIA,KAAI,mBAAmB;AAC1B,YAAM,UAAU,yBAAyBA,KAAI,aAAa,qBAAqB;AAC/E,YAAM,OAAO,SAAS,KAAK,QAAQ,OAAO,kDAAkD,KAAK,WAAW,UAAU,8GAAyGA,KAAI,aAAa,qBAAqB;AACrQ,YAAMA,KAAI,kBAAkB,KAAK,EAAE,OAAO,KAAK,OAAO,MAAM,KAAK,MAAM,SAAS,KAAK,CAAC;AAAA,IACvF;AAAA,EACD,SAAS,GAAG;AAAA,EAAC;AACd;AATe;AAWf,eAAe,gBAAgBA,MAAU,MAAW;AACnD,MAAI;AACH,QAAIA,KAAI,WAAW;AAClB,YAAMA,KAAI,UAAU,KAAK,EAAE,MAAM,eAAe,MAAM,KAAK,MAAM,SAAS,KAAK,SAAS,MAAM,KAAK,MAAM,SAAS,KAAK,SAAS,QAAQ,KAAK,OAAO,CAAC;AAAA,IACtJ;AAAA,EACD,SAAS,GAAG;AAAA,EAAC;AACd;AANe;AAQf,eAAsB,cAAcA,MAAU,SAAkB;AAC/D,QAAM,OAA2B,MAAM,QAAQ,KAAK,EAAE,MAAM,MAAM,IAAI;AACtE,MAAI,CAAC,KAAM,QAAOD,GAAE,EAAE,OAAO,eAAe,GAAG,GAAG;AAClD,QAAM,QAAQ,KAAK,QAAQ,IAAI,KAAK,EAAE,MAAM,GAAG,GAAG;AAClD,QAAM,SAAS,KAAK,SAAS,IAAI,KAAK,EAAE,MAAM,GAAG,GAAG,EAAE,YAAY;AAClE,QAAM,EAAE,KAAK,UAAU,QAAQ,YAAY,IAAI,eAAe,KAAK,KAAK;AACxE,QAAM,QAAQ,SAAS,MAAM,GAAG,EAAE;AAClC,QAAM,WAAW,KAAK,WAAW,IAAI,KAAK,EAAE,MAAM,GAAG,GAAG;AACxD,QAAM,WAAW,KAAK,WAAW,KAAK,eAAe,IAAI,KAAK,EAAE,MAAM,GAAG,GAAI;AAC7E,QAAM,QAAQ,KAAK,QAAQ,iBAAiB,MAAM,GAAG,GAAG;AACxD,QAAM,WAAW,KAAK,WAAW,IAAI,MAAM,GAAG,GAAG;AACjD,QAAM,UAAU,KAAK,UAAU,KAAK,cAAc,OAAO,MAAM,GAAG,GAAG;AACrE,MAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,WAAY,CAAC,SAAS,CAAC,OAAQ;AACxD,WAAOA,GAAE,EAAE,OAAO,0BAA0B,GAAG,GAAG;AAAA,EACnD;AAEA,QAAM,MAAM,MAAM,cAAcC,MAAK,aAAa,OAAO,SAAS,OAAO;AAEzE,QAAM,aAAa;AAAA,IAClB;AAAA,IACA;AAAA,IACA;AAAA,IACA,OAAO,KAAK,QAAQ,IAAI,MAAM,GAAG,GAAG;AAAA,IACpC,MAAM,KAAK,OAAO,IAAI,MAAM,GAAG,EAAE;AAAA,IACjC;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,YAAY,KAAK,cAAc;AAAA,IAC/B,YAAY,KAAK,cAAc;AAAA,IAC/B,cAAc,KAAK,gBAAgB;AAAA,IACnC,OAAO,KAAK,SAAS;AAAA,IACrB,UAAU,KAAK,YAAY;AAAA,EAC5B;AAEA,MAAI;AACJ,MAAI,CAAC,KAAK;AACT,QAAI;AACH,gBAAU,MAAM,WAAWA,MAAK,UAAU;AAC1C,YAAM,YAAYA,MAAK,UAAU;AAAA,IAClC,SAAS,GAAG;AACX,aAAOD,GAAE,EAAE,OAAO,iBAAiB,GAAG,GAAG;AAAA,IAC1C;AAAA,EACD;AAEA,QAAM,OAAO,UAAU,SAAS,IAAI;AAGpC,UAAQ,OAAO,iBAAiB,SAAS,MAAM;AAAA,EAAe,CAAC;AAC/D,QAAM,QAAQ,IAAI;AAAA,IACjB,eAAeC,MAAK,EAAE,GAAG,YAAY,QAAQ,GAAG,IAAI;AAAA,IACpD,uBAAuBA,MAAK,UAAU;AAAA,IACtC,gBAAgBA,MAAK,UAAU;AAAA,EAChC,CAAC;AAED,SAAOD,GAAE,EAAE,IAAI,MAAM,SAAS,WAAW,KAAK,YAAY,KAAK,OAAO,cAAc,KAAK,QAAQ,CAAC;AACnG;AAzDsB;;;ACxKtB,SAASE,MAAK,MAAW,SAAS,KAAK,UAAkC,CAAC,GAAG;AAC3E,SAAO,IAAI,SAAS,KAAK,UAAU,IAAI,GAAG;AAAA,IACxC;AAAA,IACA,SAAS,EAAE,gBAAgB,mCAAmC,GAAG,QAAQ;AAAA,EAC3E,CAAC;AACH;AALS,OAAAA,OAAA;AAOT,eAAeC,WAAU,SAAkB;AACzC,MAAI;AAAE,WAAO,MAAM,QAAQ,KAAK;AAAA,EAAG,SAAS,GAAG;AAAE,WAAO;AAAA,EAAM;AAChE;AAFe,OAAAA,YAAA;AAKf,eAAe,WAAWC,MAAU,SAAkB;AACpD,QAAM,OAAO,MAAMD,WAAU,OAAO;AACpC,MAAI,CAAC,KAAM,QAAOD,MAAK,EAAE,OAAO,eAAe,GAAG,GAAG;AACrD,QAAM,MAAK,oBAAI,KAAK,GAAE,YAAY;AAClC,QAAM,QAAQ,KAAK,QAAQ,KAAK,SAAS,EAAE,MAAM,GAAG,GAAG;AACvD,QAAM,WAAW,KAAK,WAAW,IAAI,SAAS,EAAE,MAAM,GAAG,GAAG;AAC5D,QAAM,WAAW,KAAK,WAAW,IAAI,SAAS,EAAE,MAAM,GAAG,GAAG;AAC5D,QAAM,UAAU,KAAK,UAAU,IAAI,SAAS,EAAE,MAAM,GAAG,GAAG;AAC1D,MAAI;AACF,UAAME,KAAI,GAAG;AAAA,MACX;AAAA;AAAA,IAEF,EAAE;AAAA,MACA;AAAA,MAAI;AAAA,MAAI;AAAA,MACR;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,KAAK,UAAU;AAAA,MACf,KAAK,QAAQ;AAAA,MACb,KAAK,WAAW;AAAA,MAChB,KAAK,OAAO;AAAA,MACZ,KAAK,QAAQ;AAAA,MACb;AAAA,MACA,OAAO,SAAS,OAAO,KAAK,UAAU,CAAC,IAAI,OAAO,KAAK,UAAU,IAAI;AAAA,MACrE,OAAO,SAAS,OAAO,KAAK,WAAW,CAAC,IAAI,OAAO,KAAK,WAAW,IAAI;AAAA,MACvE,KAAK,YAAY;AAAA,MACjB,KAAK,cAAc;AAAA,MACnB,KAAK,cAAc;AAAA,MACnB,KAAK,gBAAgB;AAAA,MACrB,KAAK,SAAS;AAAA,IAChB,EAAE,IAAI;AAAA,EACR,SAAS,GAAG;AACV,WAAOF,MAAK,EAAE,OAAO,WAAW,GAAG,GAAG;AAAA,EACxC;AACA,SAAOA,MAAK,EAAE,IAAI,KAAK,CAAC;AAC1B;AApCe;AAuCf,eAAe,WAAWE,MAAU,SAAkB;AACpD,QAAM,OAAO,MAAMD,WAAU,OAAO;AACpC,MAAI,CAAC,KAAM,QAAOD,MAAK,EAAE,OAAO,eAAe,GAAG,GAAG;AACrD,QAAM,MAAK,oBAAI,KAAK,GAAE,YAAY;AAClC,MAAI;AACF,UAAME,KAAI,GAAG;AAAA,MACX;AAAA;AAAA,IAEF,EAAE;AAAA,MACA;AAAA,MAAI;AAAA,MAAI;AAAA,MACR;AAAA,MACA,KAAK,QAAQ;AAAA,MACb,KAAK,WAAW;AAAA,MAChB,KAAK,UAAU;AAAA,MACf,KAAK,UAAU;AAAA,MACf,KAAK,QAAQ;AAAA,MACb,KAAK,WAAW;AAAA,MAChB,KAAK,OAAO;AAAA,MACZ,KAAK,QAAQ;AAAA,MACb,KAAK,WAAW;AAAA,MAChB,OAAO,SAAS,OAAO,KAAK,UAAU,CAAC,IAAI,OAAO,KAAK,UAAU,IAAI;AAAA,MACrE,OAAO,SAAS,OAAO,KAAK,WAAW,CAAC,IAAI,OAAO,KAAK,WAAW,IAAI;AAAA,MACvE,KAAK,YAAY;AAAA,MACjB,KAAK,cAAc;AAAA,MACnB,KAAK,cAAc;AAAA,MACnB,KAAK,gBAAgB;AAAA,MACrB,KAAK,SAAS;AAAA,IAChB,EAAE,IAAI;AAAA,EACR,SAAS,GAAG;AACV,WAAOF,MAAK,EAAE,OAAO,WAAW,GAAG,GAAG;AAAA,EACxC;AACA,SAAOA,MAAK,EAAE,IAAI,KAAK,CAAC;AAC1B;AAhCe;AAkCf,eAAe,YAAYE,MAAU;AACnC,QAAM,SAAS,IAAI,KAAK,KAAK,IAAI,IAAI,KAAG,KAAG,OAAK,GAAI,EAAE,YAAY;AAClE,MAAI;AACF,UAAM,SAAS,MAAMA,KAAI,GAAG;AAAA,MAC1B;AAAA,IACF,EAAE,KAAK,MAAM,EAAE,IAAI;AACnB,UAAM,QAAQ,MAAMA,KAAI,GAAG;AAAA,MACzB;AAAA,IACF,EAAE,IAAI;AACN,WAAOF,MAAK,EAAE,IAAI,MAAM,cAAc,OAAO,WAAW,CAAC,GAAG,aAAc,MAAM,UAAU,CAAC,GAAG,OAAM,EAAE,CAAC;AAAA,EACzG,SAAS,GAAG;AACV,WAAOA,MAAK,EAAE,OAAO,WAAW,GAAG,GAAG;AAAA,EACxC;AACF;AAbe;AAef,eAAe,kBAAkBE,MAAU,SAAkB;AAC3D,QAAM,MAAM,IAAI,IAAI,QAAQ,GAAG;AAC/B,QAAM,UAAU,IAAI,aAAa,IAAI,SAAS,KAAK;AACnD,QAAM,QAAQ,KAAK,IAAI,SAAS,IAAI,aAAa,IAAI,OAAO,KAAK,MAAM,EAAE,KAAK,IAAI,GAAG;AACrF,MAAI,CAAC,QAAS,QAAOF,MAAK,EAAE,OAAO,mBAAmB,GAAG,GAAG;AAC5D,MAAI;AACF,UAAM,EAAE,QAAQ,IAAI,MAAME,KAAI,GAAG;AAAA,MAC/B;AAAA,IACF,EAAE,KAAK,SAAS,KAAK,EAAE,IAAI;AAC3B,WAAOF,MAAK,EAAE,IAAI,MAAM,OAAO,QAAQ,CAAC;AAAA,EAC1C,SAAS,GAAG;AACV,WAAOA,MAAK,EAAE,OAAO,WAAW,GAAG,GAAG;AAAA,EACxC;AACF;AAbe;AAoBf,eAAe,YAAYE,MAAU,SAAkB;AACrD,QAAM,OAAO,MAAMD,WAAU,OAAO;AACpC,MAAI,CAAC,KAAM,QAAOD,MAAK,EAAE,OAAO,eAAe,GAAG,GAAG;AACrD,QAAM,WAAW,OAAO,KAAK,OAAO,WAAW,KAAK,KAAK;AACzD,QAAM,MAAM,WAAW,IAAI,KAAK,QAAQ,IAAI,oBAAI,KAAK;AACrD,QAAM,MAAM,IAAI,YAAY;AAC5B,QAAM,MAAM,IAAI,MAAM,GAAG,EAAE;AAC3B,QAAM,OAAO,IAAI,MAAM,IAAI,EAAE;AAC7B,QAAM,SAAS;AAAA,IACb,OAAO,KAAK,QAAQ,SAAS,SAAS,EAAE,MAAM,GAAG,EAAE;AAAA,IACnD,MAAM,KAAK,QAAQ;AAAA,IACnB,SAAS,KAAK,WAAW;AAAA,IACzB,QAAQ,KAAK,UAAU;AAAA,IACvB,QAAQ,KAAK,UAAU;AAAA,IACvB,MAAM,KAAK,QAAQ;AAAA,IACnB,SAAS,KAAK,WAAW;AAAA,IACzB,KAAK,KAAK,OAAO;AAAA,IACjB,MAAM,KAAK,QAAQ;AAAA,IACnB,SAAS,KAAK,WAAW;AAAA,IACzB,YAAY,OAAO,SAAS,OAAO,KAAK,UAAU,CAAC,IAAI,OAAO,KAAK,UAAU,IAAI;AAAA,IACjF,aAAa,OAAO,SAAS,OAAO,KAAK,WAAW,CAAC,IAAI,OAAO,KAAK,WAAW,IAAI;AAAA,IACpF,UAAU,KAAK,YAAY;AAAA,IAC3B,YAAY,KAAK,cAAc;AAAA,IAC/B,YAAY,KAAK,cAAc;AAAA,IAC/B,cAAc,KAAK,gBAAgB;AAAA,IACnC,OAAO,KAAK,SAAS;AAAA,EACvB;AACA,MAAI;AACF,UAAME,KAAI,GAAG;AAAA,MACX;AAAA;AAAA,IAEF,EAAE;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,IACT,EAAE,IAAI;AACN,QAAIA,KAAI,MAAM;AACZ,YAAMA,KAAI,KAAK;AAAA,QACb;AAAA;AAAA,MAEF,EAAE;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,QACP,OAAO;AAAA,MACT,EAAE,IAAI;AAAA,IACR;AAAA,EACF,SAAS,GAAG;AACV,YAAQ,MAAM,gCAAgC,CAAC;AAC/C,WAAOF,MAAK,EAAE,OAAO,6BAA6B,GAAG,GAAG;AAAA,EAC1D;AACA,QAAM,iBAAiB;AACvB,QAAM,aAAaE,KAAI,kBAAkB;AACzC,QAAM,YAAY,KAAK,WAAW,OAAO,WAAW;AACpD,QAAM,YAAoC;AAAA,IACxC,eAAe,OAAO,QAAQ;AAAA,IAC9B,eAAe,OAAO,YAAY;AAAA,IAClC,YAAY,OAAO,WAAW;AAAA,IAC9B,sBAAsB,OAAO,cAAc,OAAO,OAAO,WAAW,IAAI;AAAA,IACxE,YAAY,OAAO;AAAA,IACnB,MAAM,OAAO;AAAA,IACb,KAAK,OAAO;AAAA,IACZ,MAAM,OAAO;AAAA,EACf;AACA,SAAO,KAAK,SAAS,EAAE,QAAQ,OAAK,UAAU,CAAC,MAAM,UAAa,OAAO,UAAU,CAAC,CAAC;AACrF,QAAM,aAAa,EAAE,WAAW,QAAQ,CAAC,EAAE,MAAM,KAAK,QAAQ,SAAS,QAAQ,UAAU,CAAC,EAAE;AAC5F,MAAI;AACF,QAAI,YAAY;AACd,YAAM,MAAM,8DAA8D,cAAc,eAAe,UAAU;AACjH,YAAM,OAAO,MAAM,MAAM,KAAK,EAAE,QAAQ,QAAQ,MAAM,KAAK,UAAU,UAAU,GAAG,SAAS,EAAE,gBAAgB,mBAAmB,EAAE,CAAC;AACnI,UAAI,CAAC,KAAK,IAAI;AACZ,cAAM,KAAK,MAAM,KAAK,KAAK,EAAE,MAAM,MAAM,EAAE;AAC3C,eAAOF,MAAK,EAAE,OAAO,cAAc,KAAK,MAAM,IAAI,GAAG,MAAM,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG;AAAA,MAC7E;AAAA,IACF;AAAA,EACF,SAAS,GAAG;AAAA,EAAC;AACb,SAAOA,MAAK,EAAE,IAAI,KAAK,CAAC;AAC1B;AA9Ge;AAiHf,SAAS,UAAU;AAAE,SAAOA,MAAK,EAAE,SAAS,OAAO,SAAS,sBAAsB,GAAG,GAAG;AAAG;AAAlF;AAET,eAAe,iBAAiBE,MAAU,SAAkB;AAC1D,MAAI;AACF,QAAIA,KAAI,UAAU,OAAOA,KAAI,OAAO,UAAU,YAAY;AAExD,YAAM,YAAY,MAAMA,KAAI,OAAO,MAAM,OAAO;AAChD,UAAI,UAAU,WAAW,KAAK;AAE5B,cAAM,MAAM,IAAI,IAAI,QAAQ,GAAG;AAC/B,cAAM,OAAO,IAAI,SAAS,YAAY;AACtC,cAAM,UAAU,IAAI,QAAQ,UAAU,OAAO;AAC7C,YAAI,CAAC,QAAQ,IAAI,cAAc,GAAG;AAChC,cAAI,KAAK,SAAS,MAAM,EAAG,SAAQ,IAAI,gBAAgB,yBAAyB;AAAA,mBACvE,KAAK,SAAS,KAAK,EAAG,SAAQ,IAAI,gBAAgB,uCAAuC;AAAA,mBACzF,KAAK,SAAS,OAAO,EAAG,SAAQ,IAAI,gBAAgB,iCAAiC;AAAA,mBACrF,KAAK,SAAS,MAAM,EAAG,SAAQ,IAAI,gBAAgB,eAAe;AAAA,mBAClE,KAAK,SAAS,MAAM,EAAG,SAAQ,IAAI,gBAAgB,cAAc;AAAA,mBACjE,KAAK,SAAS,MAAM,EAAG,SAAQ,IAAI,gBAAgB,WAAW;AAAA,mBAC9D,KAAK,SAAS,MAAM,KAAK,KAAK,SAAS,OAAO,EAAG,SAAQ,IAAI,gBAAgB,YAAY;AAAA,mBACzF,KAAK,SAAS,OAAO,EAAG,SAAQ,IAAI,gBAAgB,YAAY;AAAA,mBAChE,KAAK,SAAS,OAAO,KAAK,KAAK,SAAS,MAAM,EAAG,SAAQ,IAAI,gBAAgB,0BAA0B;AAAA,QAClH;AAEA,YAAI,CAAC,QAAQ,IAAI,eAAe,GAAG;AACjC,cAAI,kDAAkD,KAAK,IAAI,GAAG;AAChE,oBAAQ,IAAI,iBAAiB,qCAAqC;AAAA,UACpE,OAAO;AACL,oBAAQ,IAAI,iBAAiB,oCAAoC;AAAA,UACnE;AAAA,QACF;AACA,eAAO,IAAI,SAAS,UAAU,MAAM,EAAE,QAAQ,UAAU,QAAQ,QAAQ,CAAC;AAAA,MAC3E;AAAA,IACF;AAAA,EACF,SAAS,GAAG;AACV,YAAQ,KAAK,qBAAqB,CAAQ;AAAA,EAC5C;AACA,SAAO,IAAI,SAAS,aAAa,EAAE,QAAQ,KAAK,SAAS,EAAE,iBAAiB,WAAW,EAAE,CAAC;AAC5F;AApCe;AAsCf,IAAO,cAAQ;AAAA,EACb,MAAM,MAAM,SAAkBA,MAAU,KAAU;AAChD,UAAM,EAAE,SAAS,IAAI,IAAI,IAAI,QAAQ,GAAG;AACxC,UAAM,SAAS,QAAQ,OAAO,YAAY;AAG5C,QAAI,aAAa,mBAAmB,WAAW,OAAQ,QAAO,cAAcA,MAAK,OAAO;AACxF,QAAI,aAAa,kBAAkB,WAAW,OAAQ,QAAO,cAAcA,MAAK,OAAO;AACvF,QAAI,aAAa,eAAe,WAAW,OAAQ,QAAO,WAAWA,MAAK,OAAO;AACjF,QAAI,aAAa,eAAe,WAAW,OAAQ,QAAO,WAAWA,MAAK,OAAO;AACjF,QAAI,aAAa,gBAAgB,WAAW,MAAO,QAAO,YAAYA,IAAG;AACzE,QAAI,aAAa,uBAAuB,WAAW,MAAO,QAAO,kBAAkBA,MAAK,OAAO;AAC/F,QAAI,aAAa,gBAAgB,WAAW,OAAQ,QAAO,YAAYA,MAAK,OAAO;AACjF,QAAI,SAAS,WAAW,YAAY,KAAK,WAAW,OAAO;AAEzD,YAAM,KAAK,SAAS,MAAM,GAAG,EAAE,IAAI;AACnC,UAAI,CAAC,GAAI,QAAOF,MAAK,EAAE,OAAO,cAAc,GAAG,GAAG;AAClD,UAAI;AACF,cAAM,MAAM,MAAME,KAAI,GAAG;AAAA,UACvB;AAAA,QACF,EAAE,KAAK,EAAE,EAAE,MAAM;AACjB,YAAI,CAAC,IAAK,QAAOF,MAAK,EAAE,IAAI,OAAO,OAAO,YAAY,GAAG,GAAG;AAC5D,eAAOA,MAAK,EAAE,IAAI,MAAM,MAAM,IAAI,CAAC;AAAA,MACrC,SAAS,GAAG;AACV,eAAOA,MAAK,EAAE,OAAO,WAAW,GAAG,GAAG;AAAA,MACxC;AAAA,IACF;AACA,QAAI,aAAa,gBAAgB,WAAW,OAAO;AACjD,YAAM,MAAM,IAAI,IAAI,QAAQ,GAAG;AAC/B,YAAM,IAAI,IAAI,aAAa,IAAI,GAAG;AAClC,YAAM,SAAS,IAAI,aAAa,IAAI,QAAQ;AAC5C,YAAM,OAAO,IAAI,aAAa,IAAI,MAAM;AACxC,YAAM,QAAQ,KAAK,IAAI,SAAS,IAAI,aAAa,IAAI,OAAO,KAAK,MAAM,EAAE,KAAK,IAAI,GAAG;AACrF,YAAM,SAAS,SAAS,IAAI,aAAa,IAAI,QAAQ,KAAK,KAAK,EAAE,KAAK;AACtE,YAAM,UAAU,CAAC;AACjB,YAAM,OAAO,CAAC;AACd,UAAI,QAAQ;AAAE,gBAAQ,KAAK,YAAY;AAAG,aAAK,KAAK,MAAM;AAAA,MAAG;AAC7D,UAAI,MAAM;AAAE,gBAAQ,KAAK,UAAU;AAAG,aAAK,KAAK,IAAI;AAAA,MAAG;AACvD,UAAI,GAAG;AAAE,gBAAQ,KAAK,+CAA+C;AAAG,aAAK,KAAK,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,IAAI,CAAC,GAAG;AAAA,MAAG;AACjH,YAAM,QAAQ,QAAQ,SAAS,SAAS,QAAQ,KAAK,OAAO,CAAC,KAAK;AAClE,UAAI;AACF,cAAM,EAAE,QAAQ,IAAI,MAAME,KAAI,GAAG;AAAA,UAC/B;AAAA,wBACc,KAAK;AAAA,QACrB,EAAE,KAAK,GAAG,MAAM,OAAO,MAAM,EAAE,IAAI;AACnC,eAAOF,MAAK,EAAE,IAAI,MAAM,OAAO,QAAQ,CAAC;AAAA,MAC1C,SAAS,GAAG;AACV,eAAOA,MAAK,EAAE,OAAO,WAAW,GAAG,GAAG;AAAA,MACxC;AAAA,IACF;AACF,QAAI,aAAa,eAAe,WAAW,OAAQ,QAAO,WAAaE,MAAK,OAAO;AACnF,QAAI,aAAa,iBAAiB,WAAW,OAAQ,QAAO,QAAQ;AACpE,QAAI,aAAa,gBAAgB,WAAW,OAAQ,QAAO,YAAYA,MAAK,OAAO;AACnF,QAAI,aAAa,yBAAyB,WAAW,OAAQ,QAAO,oBAAoBA,MAAK,OAAO;AAClG,QAAI,aAAa,sBAAsB,WAAW,OAAQ,QAAO,QAAQ;AACzE,QAAI,aAAa,cAAc,WAAW,OAAQ,QAAO,QAAQ;AAEjE,QAAI,aAAa,uBAAuB,WAAW,MAAO,QAAO,QAAQ;AACzE,QAAI,aAAa,iBAAiB,WAAW,MAAO,QAAOF,MAAK,EAAE,IAAI,MAAM,IAAI,KAAK,IAAI,EAAE,CAAC;AAG9F,WAAO,iBAAiBE,MAAK,OAAO;AAAA,EACpC;AAAA,EACA,MAAM,MAAM,OAAYA,MAAU,KAAU;AAE1C,UAAM,QAAQ,MAAM;AACpB,eAAW,OAAO,MAAM,UAAU;AAChC,UAAI;AACF,cAAM,OAAO,IAAI;AACjB,gBAAQ,OAAO;AAAA,UACb,KAAK,gCAAgC;AAEnC,gBAAI,QAAQ,KAAK,WAAW,KAAK,YAAY,KAAK,QAAQ;AACxD,kBAAI;AACF,sBAAMA,KAAI,GAAG;AAAA,kBACX;AAAA,gBACF,EAAE;AAAA,kBACA,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK;AAAA,kBACL,KAAK,YAAY;AAAA,kBACjB,KAAK,MAAM;AAAA,kBACX,KAAK,QAAQ;AAAA,gBACf,EAAE,IAAI;AAAA,cACR,SAAS,GAAG;AAAA,cAAC;AAAA,YACf;AACA;AAAA,UACF;AAAA,UACA,KAAK,gBAAgB;AAEnB,gBAAI,QAAQ,KAAK,SAAS,KAAK,SAAS,KAAK,UAAU,KAAK,SAAS;AACnE,kBAAI;AACF,sBAAMA,KAAI,GAAG;AAAA,kBACX;AAAA;AAAA,gBAEF,EAAE;AAAA,kBACA,KAAK;AAAA,kBACL,KAAK,SAAS;AAAA,kBACd,KAAK,SAAS;AAAA,kBACd,KAAK,QAAQ;AAAA,kBACb,KAAK,OAAO;AAAA,kBACZ,KAAK,WAAW;AAAA,kBAChB,KAAK,QAAQ;AAAA,kBACb,KAAK,WAAW;AAAA,kBAChB,KAAK,UAAU;AAAA,kBACf,KAAK,WAAW;AAAA,gBAClB,EAAE,IAAI;AAAA,cACR,SAAS,GAAG;AAEV,oBAAI,MAAM;AAAA,cACZ;AAAA,YACF;AACA;AAAA,UACF;AAAA,UACA,KAAK,iCAAiC;AAEpC,gBAAI;AACF,oBAAM,iBAAiB;AACvB,oBAAM,aAAaA,KAAI,kBAAkB;AACzC,kBAAI,YAAY;AACd,sBAAM,YAAY,MAAM,WAAW,MAAM,aAAa,OAAO,WAAW;AACxE,sBAAM,aAAa;AAAA,kBACjB;AAAA,kBACA,QAAQ;AAAA,oBACN,EAAE,OAAO,MAAM,QAAQ,SAAS,SAAS,EAAE,MAAM,GAAE,EAAE,GAAG,QAAQ;AAAA,sBAC9D,eAAe,MAAM,QAAQ;AAAA,sBAC7B,YAAY,MAAM,WAAW;AAAA,sBAC7B,MAAM,MAAM,QAAQ;AAAA,sBACpB,QAAQ,MAAM,UAAU;AAAA,sBACxB,SAAS,MAAM,WAAW;AAAA,oBAC5B,EAAC;AAAA,kBACH;AAAA,gBACF;AACA,sBAAM,MAAM,8DAA8D,cAAc,eAAe,UAAU;AACjH,sBAAM,OAAO,MAAM,MAAM,KAAK,EAAE,QAAQ,QAAQ,SAAS,EAAE,gBAAgB,mBAAmB,GAAG,MAAM,KAAK,UAAU,UAAU,EAAE,CAAC;AACnI,oBAAI,CAAC,KAAK,IAAI;AAEZ,sBAAI,KAAK,UAAU,IAAK,KAAI,MAAM;AAAA,gBACpC;AAAA,cACF;AAAA,YACF,SAAS,GAAG;AACV,kBAAI,MAAM;AAAA,YACZ;AACA;AAAA,UACF;AAAA,UACA,KAAK,gCAAgC;AAEnC,gBAAI;AACF,kBAAIA,KAAI,OAAOA,KAAI,IAAI,QAAQ,MAAM,OAAO;AAC1C,sBAAM,WAAWA,KAAI,aAAa;AAClC,sBAAM,UAAU,KAAK,WAAW,yBAAyBA,KAAI,aAAa,qBAAqB;AAC/F,sBAAM,OAAO,KAAK,QAAQ,SAAS,KAAK,QAAQ,OAAO;AACvD,oBAAI;AAEF,sBAAI,OAAO,iBAAiB,aAAa;AAEvC,0BAAM,SAAS,IAAI,aAAa,UAAU,KAAK,OAAO,OAAO;AAE7D,2BAAO,QAAQ,aAAa,IAAI;AAChC,0BAAMA,KAAI,IAAI,KAAK,MAAM;AAAA,kBAC3B,OAAO;AACL,0BAAMA,KAAI,IAAI,KAAK,EAAE,MAAM,UAAU,IAAI,KAAK,OAAO,SAAS,KAAK,CAAC;AAAA,kBACtE;AAAA,gBACF,SAAS,OAAO;AACd,sBAAI,MAAM;AAAA,gBACZ;AAAA,cACF;AAAA,YACF,SAAS,GAAG;AAAA,YAAgB;AAC5B;AAAA,UACF;AAAA,UACA;AACE;AAAA,QACJ;AAAA,MACF,SAAS,KAAK;AACZ,YAAI;AAAE,cAAI,MAAM;AAAA,QAAG,SAAS,GAAG;AAAA,QAAC;AAAA,MAClC;AAAA,IACF;AAAA,EACF;AACF;;;ACvcA,IAAM,YAAwB,8BAAO,SAASC,MAAK,MAAM,kBAAkB;AAC1E,MAAI;AACH,WAAO,MAAM,cAAc,KAAK,SAASA,IAAG;AAAA,EAC7C,UAAE;AACD,QAAI;AACH,UAAI,QAAQ,SAAS,QAAQ,CAAC,QAAQ,UAAU;AAC/C,cAAM,SAAS,QAAQ,KAAK,UAAU;AACtC,eAAO,EAAE,MAAM,OAAO,KAAK,GAAG,MAAM;AAAA,QAAC;AAAA,MACtC;AAAA,IACD,SAAS,GAAG;AACX,cAAQ,MAAM,4CAA4C,CAAC;AAAA,IAC5D;AAAA,EACD;AACD,GAb8B;AAe9B,IAAO,6CAAQ;;;ACRf,SAAS,YAAY,GAAmB;AACvC,SAAO;AAAA,IACN,MAAM,GAAG;AAAA,IACT,SAAS,GAAG,WAAW,OAAO,CAAC;AAAA,IAC/B,OAAO,GAAG;AAAA,IACV,OAAO,GAAG,UAAU,SAAY,SAAY,YAAY,EAAE,KAAK;AAAA,EAChE;AACD;AAPS;AAUT,IAAM,YAAwB,8BAAO,SAASC,MAAK,MAAM,kBAAkB;AAC1E,MAAI;AACH,WAAO,MAAM,cAAc,KAAK,SAASA,IAAG;AAAA,EAC7C,SAAS,GAAQ;AAChB,UAAMC,SAAQ,YAAY,CAAC;AAC3B,WAAO,SAAS,KAAKA,QAAO;AAAA,MAC3B,QAAQ;AAAA,MACR,SAAS,EAAE,+BAA+B,OAAO;AAAA,IAClD,CAAC;AAAA,EACF;AACD,GAV8B;AAY9B,IAAO,2CAAQ;;;ACzBJ,IAAM,mCAAmC;AAAA,EAE9B;AAAA,EAAyB;AAC3C;AACA,IAAO,sCAAQ;;;ACcnB,IAAM,wBAAsC,CAAC;AAKtC,SAAS,uBAAuB,MAAqC;AAC3E,wBAAsB,KAAK,GAAG,KAAK,KAAK,CAAC;AAC1C;AAFgB;AAShB,SAAS,uBACR,SACAC,MACA,KACA,UACA,iBACsB;AACtB,QAAM,CAAC,MAAM,GAAG,IAAI,IAAI;AACxB,QAAM,gBAAmC;AAAA,IACxC;AAAA,IACA,KAAK,YAAY,QAAQ;AACxB,aAAO,uBAAuB,YAAY,QAAQ,KAAK,UAAU,IAAI;AAAA,IACtE;AAAA,EACD;AACA,SAAO,KAAK,SAASA,MAAK,KAAK,aAAa;AAC7C;AAfS;AAiBF,SAAS,kBACf,SACAA,MACA,KACA,UACA,iBACsB;AACtB,SAAO,uBAAuB,SAASA,MAAK,KAAK,UAAU;AAAA,IAC1D,GAAG;AAAA,IACH;AAAA,EACD,CAAC;AACF;AAXgB;;;AC3ChB,IAAM,iCAAN,MAAM,gCAA8D;AAAA,EAGnE,YACU,eACA,MACT,SACC;AAHQ;AACA;AAGT,SAAK,WAAW;AAAA,EACjB;AAAA,EArBD,OAYoE;AAAA;AAAA;AAAA,EAC1D;AAAA,EAUT,UAAU;AACT,QAAI,EAAE,gBAAgB,kCAAiC;AACtD,YAAM,IAAI,UAAU,oBAAoB;AAAA,IACzC;AAEA,SAAK,SAAS;AAAA,EACf;AACD;AAEA,SAAS,oBAAoB,QAA0C;AAEtE,MACC,qCAAqC,UACrC,iCAAiC,WAAW,GAC3C;AACD,WAAO;AAAA,EACR;AAEA,aAAW,cAAc,kCAAkC;AAC1D,wBAAoB,UAAU;AAAA,EAC/B;AAEA,QAAM,kBAA+C,gCACpD,SACAC,MACA,KACC;AACD,QAAI,OAAO,UAAU,QAAW;AAC/B,YAAM,IAAI,MAAM,6CAA6C;AAAA,IAC9D;AACA,WAAO,OAAO,MAAM,SAASA,MAAK,GAAG;AAAA,EACtC,GATqD;AAWrD,SAAO;AAAA,IACN,GAAG;AAAA,IACH,MAAM,SAASA,MAAK,KAAK;AACxB,YAAM,aAAyB,gCAAU,MAAM,MAAM;AACpD,YAAI,SAAS,eAAe,OAAO,cAAc,QAAW;AAC3D,gBAAM,aAAa,IAAI;AAAA,YACtB,KAAK,IAAI;AAAA,YACT,KAAK,QAAQ;AAAA,YACb,MAAM;AAAA,YAAC;AAAA,UACR;AACA,iBAAO,OAAO,UAAU,YAAYA,MAAK,GAAG;AAAA,QAC7C;AAAA,MACD,GAT+B;AAU/B,aAAO,kBAAkB,SAASA,MAAK,KAAK,YAAY,eAAe;AAAA,IACxE;AAAA,EACD;AACD;AAxCS;AA0CT,SAAS,qBACR,OAC8B;AAE9B,MACC,qCAAqC,UACrC,iCAAiC,WAAW,GAC3C;AACD,WAAO;AAAA,EACR;AAEA,aAAW,cAAc,kCAAkC;AAC1D,wBAAoB,UAAU;AAAA,EAC/B;AAGA,SAAO,cAAc,MAAM;AAAA,IAC1B,mBAAyE,wBACxE,SACAA,MACA,QACI;AACJ,WAAK,MAAMA;AACX,WAAK,MAAM;AACX,UAAI,MAAM,UAAU,QAAW;AAC9B,cAAM,IAAI,MAAM,sDAAsD;AAAA,MACvE;AACA,aAAO,MAAM,MAAM,OAAO;AAAA,IAC3B,GAXyE;AAAA,IAazE,cAA0B,wBAAC,MAAM,SAAS;AACzC,UAAI,SAAS,eAAe,MAAM,cAAc,QAAW;AAC1D,cAAM,aAAa,IAAI;AAAA,UACtB,KAAK,IAAI;AAAA,UACT,KAAK,QAAQ;AAAA,UACb,MAAM;AAAA,UAAC;AAAA,QACR;AACA,eAAO,MAAM,UAAU,UAAU;AAAA,MAClC;AAAA,IACD,GAT0B;AAAA,IAW1B,MAAM,SAAwD;AAC7D,aAAO;AAAA,QACN;AAAA,QACA,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,MACN;AAAA,IACD;AAAA,EACD;AACD;AAnDS;AAqDT,IAAI;AACJ,IAAI,OAAO,wCAAU,UAAU;AAC9B,kBAAgB,oBAAoB,mCAAK;AAC1C,WAAW,OAAO,wCAAU,YAAY;AACvC,kBAAgB,qBAAqB,mCAAK;AAC3C;AACA,IAAO,kCAAQ;",
  "names": ["PerformanceMark", "clear", "count", "countReset", "createTask", "debug", "dir", "dirxml", "error", "group", "groupCollapsed", "groupEnd", "info", "log", "profile", "profileEnd", "table", "time", "timeEnd", "timeLog", "timeStamp", "trace", "warn", "hrtime", "dir", "env", "count", "cwd", "hrtime", "assert", "env", "count", "error", "ref", "env", "j", "env", "json", "parseJSON", "env", "env", "env", "error", "env", "env"]
}
